{"ast":null,"code":"import { useSharedValue } from \"react-native-reanimated\";\nexport var useVector = function useVector() {\n  var x1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var y1 = arguments.length > 1 ? arguments[1] : undefined;\n  var x = useSharedValue(x1);\n  var y = useSharedValue(y1 != null ? y1 : x1);\n  return {\n    x: x,\n    y: y\n  };\n};\nexport var vec2 = function () {\n  var _f = function _f(x, y) {\n    var _ref;\n    return {\n      x: x != null ? x : 0,\n      y: (_ref = y != null ? y : x) != null ? _ref : 0\n    };\n  };\n  _f._closure = {};\n  _f.asString = \"function vec2(x,y){var _ref;return{x:x!=null?x:0,y:(_ref=y!=null?y:x)!=null?_ref:0};}\";\n  _f.__workletHash = 6645977179329;\n  _f.__location = \"/Users/pesos/Documents/GitHub/csula-cs3337swe-202301Group5-repo/node_modules/react-native-redash/lib/module/Vectors.js (1:306)\";\n  return _f;\n}();\nexport var vec = {\n  create: vec2\n};","map":{"version":3,"names":["useSharedValue","useVector","x1","arguments","length","undefined","y1","x","y","vec2","_f","_ref","_closure","asString","__workletHash","__location","vec","create"],"sources":["/Users/pesos/Documents/GitHub/csula-cs3337swe-202301Group5-repo/node_modules/react-native-redash/lib/module/Vectors.ts"],"sourcesContent":["import type Animated from \"react-native-reanimated\";\nimport { useSharedValue } from \"react-native-reanimated\";\n\n/**\n * @summary Type representing a vector\n * @example\n   export interface Vector<T = number> {\n    x: T;\n    y: T;\n  }\n */\nexport interface Vector<T = number> {\n  x: T;\n  y: T;\n}\n\n/**\n * @summary Returns a vector of shared values\n */\nexport const useVector = (\n  x1 = 0,\n  y1?: number\n): Vector<Animated.SharedValue<number>> => {\n  const x = useSharedValue(x1);\n  const y = useSharedValue(y1 ?? x1);\n  return { x, y };\n};\n\ntype Create = {\n  (): Vector<0>;\n  <T extends Animated.Adaptable<number>>(x: T, y?: T): Vector<T>;\n};\n\n/**\n *\n * @param x\n * @param y\n * @worklet\n */\nexport const vec2: Create = <T extends Animated.Adaptable<number>>(\n  x?: T,\n  y?: T\n) => {\n  \"worklet\";\n  return {\n    x: x ?? 0,\n    y: y ?? x ?? 0,\n  };\n};\n\nexport const vec = {\n  create: vec2,\n};\n"],"mappings":"AACA,SAASA,cAAT,QAA+B,yBAA/B;AAkBA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAYA,CAAA,EAGkB;EAAA,IAFzCC,EAEyC,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAFpC,CAEoC;EAAA,IADzCG,EACyC,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACzC,IAAME,CAAC,GAAGP,cAAc,CAACE,EAAD,CAAxB;EACA,IAAMM,CAAC,GAAGR,cAAc,CAACM,EAAD,WAACA,EAAD,GAAOJ,EAAP,CAAxB;EACA,OAAO;IAAEK,CAAC,EAADA,CAAF;IAAKC,CAAC,EAADA;EAAL,CAAP;AACD,CAPM;AAoBP,OAAO,IAAMC,IAAY;EAAA,IAAAC,EAAA,YAAAA,GACvBH,CAD0B,EAE1BC,CAF0B,EAGvB;IAAA,IAAAG,IAAA;IAEH,OAAO;MACLJ,CAAC,EAAEA,CAAF,WAAEA,CAAF,GAAO,CADH;MAELC,CAAC,GAAAG,IAAA,GAAEH,CAAF,WAAEA,CAAF,GAAOD,CAAP,YAAAI,IAAA,GAAY;IAFR,CAAP;EAID,CATM;EAAAD,EAAA,CAAAE,QAAA;EAAAF,EAAA,CAAAG,QAAA;EAAAH,EAAA,CAAAI,aAAA;EAAAJ,EAAA,CAAAK,UAAA;EAAA,OAAAL,EAAA;AAAA;AAWP,OAAO,IAAMM,GAAG,GAAG;EACjBC,MAAM,EAAER;AADS,CAAZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}