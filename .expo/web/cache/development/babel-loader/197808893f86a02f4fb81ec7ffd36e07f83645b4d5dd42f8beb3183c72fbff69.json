{"ast":null,"code":"import { useCallback, useMemo } from 'react';\nexport default function useCircleValues(_ref) {\n  var radius = _ref.radius,\n    activeStrokeWidth = _ref.activeStrokeWidth,\n    inActiveStrokeWidth = _ref.inActiveStrokeWidth;\n  var isSameStrokeWidth = useMemo(function () {\n    return activeStrokeWidth === inActiveStrokeWidth;\n  }, [activeStrokeWidth, inActiveStrokeWidth]);\n  var isActiveStrokeBigger = useMemo(function () {\n    return activeStrokeWidth > inActiveStrokeWidth;\n  }, [activeStrokeWidth, inActiveStrokeWidth]);\n  var findRadius = useCallback(function () {\n    if (isSameStrokeWidth) {\n      return radius + inActiveStrokeWidth / 2;\n    }\n    if (isActiveStrokeBigger) {\n      return radius + activeStrokeWidth / 2;\n    }\n    return radius + inActiveStrokeWidth / 2;\n  }, [isSameStrokeWidth, isActiveStrokeBigger, radius, inActiveStrokeWidth, activeStrokeWidth]);\n  var inactiveCircleRadius = useMemo(function () {\n    return findRadius();\n  }, [findRadius]);\n  var activeCircleRadius = useMemo(function () {\n    return findRadius();\n  }, [findRadius]);\n  var circleCircumference = useMemo(function () {\n    return 2 * Math.PI * activeCircleRadius;\n  }, [activeCircleRadius]);\n  return {\n    inactiveCircleRadius: inactiveCircleRadius,\n    activeCircleRadius: activeCircleRadius,\n    circleCircumference: circleCircumference\n  };\n}","map":{"version":3,"names":["useCallback","useMemo","useCircleValues","_ref","radius","activeStrokeWidth","inActiveStrokeWidth","isSameStrokeWidth","isActiveStrokeBigger","findRadius","inactiveCircleRadius","activeCircleRadius","circleCircumference","Math","PI"],"sources":["/Users/pesos/Documents/GitHub/csula-cs3337swe-202301Group5-repo/node_modules/react-native-circular-progress-indicator/lib/module/hooks/useCircleValues.ts"],"sourcesContent":["import { useCallback, useMemo } from 'react';\n\nexport interface UseCircleValuesProps {\n  radius: number;\n  activeStrokeWidth: number;\n  inActiveStrokeWidth: number;\n}\n\nexport default function useCircleValues({\n  radius,\n  activeStrokeWidth,\n  inActiveStrokeWidth,\n}: UseCircleValuesProps) {\n  const isSameStrokeWidth = useMemo(\n    () => activeStrokeWidth === inActiveStrokeWidth,\n    [activeStrokeWidth, inActiveStrokeWidth]\n  );\n\n  const isActiveStrokeBigger = useMemo(() => {\n    return activeStrokeWidth > inActiveStrokeWidth;\n  }, [activeStrokeWidth, inActiveStrokeWidth]);\n\n  const findRadius = useCallback(() => {\n    if (isSameStrokeWidth) {\n      return radius + inActiveStrokeWidth / 2;\n    }\n    if (isActiveStrokeBigger) {\n      return radius + activeStrokeWidth / 2;\n    }\n    return radius + inActiveStrokeWidth / 2;\n  }, [\n    isSameStrokeWidth,\n    isActiveStrokeBigger,\n    radius,\n    inActiveStrokeWidth,\n    activeStrokeWidth,\n  ]);\n\n  const inactiveCircleRadius = useMemo(() => findRadius(), [findRadius]);\n\n  const activeCircleRadius = useMemo(() => findRadius(), [findRadius]);\n\n  const circleCircumference = useMemo(\n    () => 2 * Math.PI * activeCircleRadius,\n    [activeCircleRadius]\n  );\n\n  return {\n    inactiveCircleRadius,\n    activeCircleRadius,\n    circleCircumference,\n  };\n}\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,QAAqC,OAArC;AAQA,eAAe,SAASC,eAATA,CAAAC,IAAA,EAIU;EAAA,IAHvBC,MADsC,GAIfD,IAAA,CAHvBC,MADsC;IAEtCC,iBAFsC,GAIfF,IAAA,CAFvBE,iBAFsC;IAGtCC,mBAAA,GACuBH,IAAA,CADvBG,mBAAA;EAEA,IAAMC,iBAAiB,GAAGN,OAAO,CAC/B;IAAA,OAAMI,iBAAiB,KAAKC,mBADG;EAAA,GAE/B,CAACD,iBAAD,EAAoBC,mBAApB,CAF+B,CAAjC;EAKA,IAAME,oBAAoB,GAAGP,OAAO,CAAC,YAAM;IACzC,OAAOI,iBAAiB,GAAGC,mBAA3B;EACD,CAFmC,EAEjC,CAACD,iBAAD,EAAoBC,mBAApB,CAFiC,CAApC;EAIA,IAAMG,UAAU,GAAGT,WAAW,CAAC,YAAM;IACnC,IAAIO,iBAAJ,EAAuB;MACrB,OAAOH,MAAM,GAAGE,mBAAmB,GAAG,CAAtC;IACD;IACD,IAAIE,oBAAJ,EAA0B;MACxB,OAAOJ,MAAM,GAAGC,iBAAiB,GAAG,CAApC;IACD;IACD,OAAOD,MAAM,GAAGE,mBAAmB,GAAG,CAAtC;EACD,CAR6B,EAQ3B,CACDC,iBADC,EAEDC,oBAFC,EAGDJ,MAHC,EAIDE,mBAJC,EAKDD,iBALC,CAR2B,CAA9B;EAgBA,IAAMK,oBAAoB,GAAGT,OAAO,CAAC;IAAA,OAAMQ,UAAU,EAAjB;EAAA,GAAqB,CAACA,UAAD,CAArB,CAApC;EAEA,IAAME,kBAAkB,GAAGV,OAAO,CAAC;IAAA,OAAMQ,UAAU,EAAjB;EAAA,GAAqB,CAACA,UAAD,CAArB,CAAlC;EAEA,IAAMG,mBAAmB,GAAGX,OAAO,CACjC;IAAA,OAAM,IAAIY,IAAI,CAACC,EAAT,GAAcH,kBADa;EAAA,GAEjC,CAACA,kBAAD,CAFiC,CAAnC;EAKA,OAAO;IACLD,oBADK,EACLA,oBADK;IAELC,kBAFK,EAELA,kBAFK;IAGLC,mBAAA,EAAAA;EAHK,CAAP;AAKD"},"metadata":{},"sourceType":"module","externalDependencies":[]}