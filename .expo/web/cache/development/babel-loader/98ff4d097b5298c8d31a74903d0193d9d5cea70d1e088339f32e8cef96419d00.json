{"ast":null,"code":"import React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport AddFood from \"./AddFood\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Meals = [{\n  name: 'BreakFast',\n  food: ['Eggs', 'Orange Juice']\n}, {\n  name: 'Lunch',\n  food: ['Rice', 'Chicken']\n}, {\n  name: 'Dinner',\n  food: ['Steak', 'Potatos']\n}, {\n  name: 'Snacks',\n  food: ['Peas', 'Carrots']\n}];\nfunction LogPage(_ref) {\n  var navigation = _ref.navigation;\n  var handlePress = function handlePress(mealName) {\n    navigation.navigate('AddFood', {\n      mealname: mealName\n    });\n  };\n  return _jsx(ScrollView, {\n    contentContainerStyle: {\n      padding: 10\n    },\n    children: Meals.map(function (meal, index) {\n      return _jsxs(View, {\n        style: {\n          flex: 1,\n          padding: 20\n        },\n        children: [_jsx(Text, {\n          style: styles.Text,\n          children: meal.name\n        }), meal.food.length > 0 && meal.food.map(function (item, index) {\n          return _jsx(Text, {\n            style: styles.listElement,\n            children: item\n          }, index);\n        }), _jsx(View, {\n          style: styles.button,\n          children: _jsx(Button, {\n            title: 'Add Food',\n            titleStyle: {\n              fontSize: 50\n            },\n            onPress: function onPress() {\n              return handlePress(meal.name);\n            }\n          })\n        })]\n      }, index);\n    })\n  });\n}\nvar Stack = createNativeStackNavigator();\nfunction StackNav() {\n  return _jsx(NavigationContainer, {\n    independent: true,\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"LogPage\",\n      children: [_jsx(Stack.Screen, {\n        name: \"LogPage\",\n        component: LogPage,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"AddFood\",\n        component: AddFood,\n        options: function options(_ref2) {\n          var route = _ref2.route;\n          return {\n            title: \"Add an item to \" + route.params.mealname\n          };\n        }\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  Text: {\n    fontWeight: 'bold',\n    fontSize: 30,\n    backgroundColor: 'white',\n    padding: 10\n  },\n  Link: {\n    fontWeight: 'bold',\n    fontSize: 30,\n    color: 'blue',\n    marginLeft: 10,\n    marginTop: 1,\n    backgroundColor: 'white'\n  },\n  button: {\n    alignItems: 'flex-start',\n    backgroundColor: 'white',\n    marginTop: 2\n  },\n  listElement: {\n    fontWeight: 'bold',\n    fontSize: 22,\n    color: 'black',\n    marginTop: 1,\n    backgroundColor: 'white',\n    paddingLeft: 10\n  }\n});\nexport default StackNav;","map":{"version":3,"names":["React","useState","Text","View","StyleSheet","Button","FlatList","NavigationContainer","createNativeStackNavigator","ScrollView","AddFood","jsx","_jsx","jsxs","_jsxs","Meals","name","food","LogPage","_ref","navigation","handlePress","mealName","navigate","mealname","contentContainerStyle","padding","children","map","meal","index","style","flex","styles","length","item","listElement","button","title","titleStyle","fontSize","onPress","Stack","StackNav","independent","Navigator","initialRouteName","Screen","component","options","headerShown","_ref2","route","params","create","fontWeight","backgroundColor","Link","color","marginLeft","marginTop","alignItems","paddingLeft"],"sources":["C:/Users/jtigu/Downloads/Github repo/csula-cs3337swe-202301Group5-repo/Components/Tabs/LogPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Text, View, StyleSheet, Button, FlatList } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { ScrollView } from 'react-native';\r\nimport AddFood from './AddFood';\r\n\r\nconst Meals = [\r\n  {\r\n    name: 'BreakFast',\r\n    food: ['Eggs', 'Orange Juice'],\r\n  },\r\n  {\r\n    name: 'Lunch',\r\n    food: ['Rice', 'Chicken'],\r\n  },\r\n  {\r\n    name: 'Dinner',\r\n    food: ['Steak', 'Potatos'],\r\n  },\r\n  {\r\n    name: 'Snacks',\r\n    food: ['Peas', 'Carrots'],\r\n  },\r\n];\r\n\r\nfunction LogPage({ navigation }) {\r\n  const handlePress = (mealName) => {\r\n    navigation.navigate('AddFood', { mealname: mealName });\r\n  };\r\n\r\n  return (\r\n    <ScrollView contentContainerStyle={{ padding: 10 }}>\r\n      {Meals.map((meal, index) => (\r\n        <View style={{ flex: 1, padding: 20 }} key={index}>\r\n          <Text style={styles.Text}>{meal.name}</Text>\r\n          {meal.food.length > 0 &&\r\n            meal.food.map((item, index) => (\r\n              <Text style={styles.listElement} key={index}>\r\n                {item}\r\n              </Text>\r\n            ))}\r\n          <View style={styles.button}>\r\n            <Button\r\n              title={'Add Food'}\r\n              titleStyle={{ fontSize: 50 }}\r\n              onPress={() => handlePress(meal.name)}\r\n            />\r\n          </View>\r\n        </View>\r\n      ))}\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\n \r\nfunction StackNav() {\r\n    return (\r\n      <NavigationContainer independent={true}>\r\n        <Stack.Navigator initialRouteName=\"LogPage\">\r\n          <Stack.Screen name=\"LogPage\" component={LogPage} options={{ headerShown: false }} />\r\n          <Stack.Screen name=\"AddFood\" component={AddFood} options={({ route }) => ({ title: `Add an item to ${route.params.mealname}` })} />\r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n    );\r\n  }  \r\n\r\nconst styles = StyleSheet.create({\r\n  Text: {\r\n    fontWeight: 'bold',\r\n    fontSize: 30,\r\n    backgroundColor: 'white',\r\n    padding: 10,\r\n  },\r\n\r\n  Link: {\r\n    fontWeight: 'bold',\r\n    fontSize: 30,\r\n    color: 'blue',\r\n    marginLeft: 10,\r\n    marginTop: 1,\r\n    backgroundColor: 'white',\r\n  },\r\n\r\n  button: {\r\n    alignItems: 'flex-start',\r\n    backgroundColor: 'white',\r\n    marginTop: 2,\r\n  },\r\n  listElement: {\r\n    fontWeight: 'bold',\r\n    fontSize: 22,\r\n    color: 'black',\r\n    marginTop: 1,\r\n    backgroundColor: 'white',\r\n    paddingLeft: 10,\r\n  },\r\n});\r\n\r\nexport default StackNav;\r\n\r\n// import React, { Component, useState, useEffect } from 'react';\r\n// import {Text, View, StyleSheet, Button, FlatList} from 'react-native';\r\n// import {NavigationContainer} from '@react-navigation/native';\r\n// import {createNativeStackNavigator} from '@react-navigation/native-stack';\r\n// import LogList from './LogPage_component/LogList';\r\n// import { ScrollView } from 'react-native';\r\n\r\n\r\n\r\n\r\n// const BreakFast = [\r\n//     {key: 'item1', value: 'Eggs'},\r\n//     {key: 'item2', value: 'Orange Juice'},\r\n// ];\r\n\r\n// const name = [\r\n//     {name: \"Name1\"},\r\n//     {name: \"Name2\"},\r\n// ];\r\n\r\n// const Lunch = [\r\n//     {key: 'item1', value: 'Rice'},\r\n//     {key: 'item2', value: 'Chicken'},\r\n// ];\r\n\r\n// const Dinner = [\r\n//     {key: 'item1', value: 'Steak'},\r\n//     {key: 'item2', value: 'mash potato'},\r\n// ];\r\n\r\n// const Snacks = [\r\n//     {key: 'item1', value: 'Peas'},\r\n//     {key: 'item2', value: 'Carrots'},\r\n// ];\r\n\r\n//     function AddFood(){\r\n//         return(\r\n//             <View>\r\n//                 <Text>Add Food</Text>\r\n//             </View>\r\n//         );\r\n//     }\r\n\r\n\r\n//     function LogPage({navigation}){\r\n//         return(\r\n//             <ScrollView contentContainerStyle={{padding: 10}}>\r\n//                 <View style={{flex: 1}}>\r\n//                     <Text style={[styles.Text]}>BreakFast</Text>\r\n//                     <LogList data={BreakFast} />\r\n//                     <View style={styles.button}><Button title={'Add Food'} onPress={() => navigation.navigate('AddFood')}/></View>\r\n                    \r\n//                     <Text style={[styles.Text,{marginTop:20}]}>Lunch</Text>\r\n//                     <LogList data={Lunch}/>\r\n//                     <View style={styles.button}><Button title={'Add Food'} titleStyle={{fontSize: 50}}/></View>\r\n                    \r\n//                     <Text style={[styles.Text, {marginTop: 20}]}>Dinner</Text>\r\n//                     <LogList data={Dinner}/>\r\n//                     <View style={styles.button}><Button title={'Add Food'} titleStyle={{fontSize: 50}}/></View>\r\n\r\n//                     <Text style={[styles.Text, {marginTop: 20}]}>Snacks</Text>\r\n//                     <LogList data={Snacks}/>\r\n//                     <View style={styles.button}><Button title={'Add Food'} titleStyle={{fontSize: 50}}/></View>\r\n\r\n//                 </View>\r\n//             </ScrollView>\r\n            \r\n//         );\r\n//     }\r\n\r\n//     const Stack = createNativeStackNavigator();\r\n\r\n//     function StackNav(){\r\n//         return(\r\n            \r\n//             <NavigationContainer independent={true}>\r\n//                 <Stack.Navigator initialRouteName='LogPage' >\r\n//                     <Stack.Screen name='LogPage' component={LogPage} options={{headerShown: false}}/>\r\n//                     <Stack.Screen name='AddFood' component={AddFood}/>\r\n//                 </Stack.Navigator>\r\n//             </NavigationContainer>\r\n            \r\n//         );\r\n\r\n//     }\r\n\r\n\r\n\r\n\r\n// const styles = StyleSheet.create({\r\n//     Text: \r\n//     {\r\n//        fontWeight:'bold',\r\n//        fontSize:30,\r\n//        backgroundColor:'white',\r\n//        padding:10\r\n//     },\r\n    \r\n//     Link: \r\n//     {\r\n//         fontWeight:'bold',\r\n//         fontSize:30,\r\n//         color:'blue',\r\n//         marginLeft: 10,\r\n//         marginTop:1,\r\n//         backgroundColor:'white'\r\n//     },\r\n\r\n//     button: \r\n//     {\r\n//         alignItems:'flex-start',\r\n//         backgroundColor:'white',\r\n//         marginTop: 2,\r\n//     },\r\n       \r\n// });\r\n\r\n// export default StackNav;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}