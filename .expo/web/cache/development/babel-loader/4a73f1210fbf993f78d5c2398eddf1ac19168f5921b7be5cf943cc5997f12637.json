{"ast":null,"code":"import React from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport ProfilePage from \"../ProfileComponents/PersonalInformation\";\nimport Goals from \"../ProfileComponents/Goals\";\nimport Help from \"../ProfileComponents/Help\";\nimport Settings from \"../ProfileComponents/Settings\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction ProfileItems(_ref) {\n  var navigation = _ref.navigation;\n  return _jsx(ScrollView, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.row,\n        onPress: function onPress() {\n          return navigation.navigate('Goals');\n        },\n        children: _jsxs(Text, {\n          style: styles.content,\n          children: ['Goals', \" \", '>']\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.row,\n        onPress: function onPress() {\n          return navigation.navigate('ProfilePage');\n        },\n        children: _jsxs(Text, {\n          style: styles.content,\n          children: ['Profile', \" \", '>']\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.row,\n        onPress: function onPress() {\n          return navigation.navigate('Settings');\n        },\n        children: _jsxs(Text, {\n          style: styles.content,\n          children: ['Settings', \" \", '>']\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.row,\n        onPress: function onPress() {\n          return navigation.navigate('Help');\n        },\n        children: _jsxs(Text, {\n          style: styles.content,\n          children: ['Help', \" \", '>']\n        })\n      })]\n    })\n  });\n}\nvar Stack = createStackNavigator();\nfunction ProfileStack() {\n  return _jsx(NavigationContainer, {\n    independent: true,\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"ProfileItems\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Main\",\n        component: ProfileItems,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Goals\",\n        component: Goals\n      }), _jsx(Stack.Screen, {\n        name: \"ProfilePage\",\n        component: ProfilePage\n      }), _jsx(Stack.Screen, {\n        name: \"Settings\",\n        component: Settings\n      }), _jsx(Stack.Screen, {\n        name: \"Help\",\n        component: Help\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignContent: 'center',\n    flex: 1\n  },\n  row: {\n    flexDirection: 'column',\n    height: 90,\n    margin: 8,\n    justifyContent: 'center',\n    alignContent: 'center',\n    borderColor: '#CCCCCC',\n    borderWidth: 0.2,\n    borderRadius: 15\n  },\n  content: {\n    marginLeft: 10,\n    fontSize: 20,\n    marginRight: 10,\n    justifyContent: 'center',\n    alignContent: 'center',\n    textAlign: 'center'\n  }\n});\nexport default ProfileStack;","map":{"version":3,"names":["React","SafeAreaView","ScrollView","View","Text","StyleSheet","TouchableOpacity","NavigationContainer","createStackNavigator","ProfilePage","Goals","Help","Settings","jsxs","_jsxs","jsx","_jsx","ProfileItems","_ref","navigation","children","style","styles","container","row","onPress","navigate","content","Stack","ProfileStack","independent","Navigator","initialRouteName","Screen","name","component","options","headerShown","create","justifyContent","alignContent","flex","flexDirection","height","margin","borderColor","borderWidth","borderRadius","marginLeft","fontSize","marginRight","textAlign"],"sources":["C:/Users/jtigu/Downloads/Github repo/csula-cs3337swe-202301Group5-repo/Components/Tabs/Profile.js"],"sourcesContent":["import React from 'react';\r\nimport { SafeAreaView, ScrollView, View, Text, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\n// import screens\r\nimport ProfilePage from '../ProfileComponents/PersonalInformation';\r\nimport Goals from '../ProfileComponents/Goals';\r\nimport Help from '../ProfileComponents/Help';\r\nimport Settings from '../ProfileComponents/Settings';\r\n\r\n\r\n\r\n\r\nfunction ProfileItems({ navigation }) {\r\n    return (\r\n        <ScrollView>\r\n            <View style={styles.container}>\r\n                <TouchableOpacity style={styles.row} onPress={() => navigation.navigate('Goals')}>\r\n                    <Text style={styles.content}>{'Goals'} {'>'}</Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity style={styles.row} onPress={() => navigation.navigate('ProfilePage')}>\r\n                    <Text style={styles.content}>{'Profile'} {'>'}</Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity style={styles.row} onPress={() => navigation.navigate('Settings')}>\r\n                    <Text style={styles.content}>{'Settings'} {'>'}</Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity style={styles.row} onPress={() => navigation.navigate('Help')}>\r\n                    <Text style={styles.content}>{'Help'} {'>'}</Text>\r\n                </TouchableOpacity>\r\n\r\n            </View>\r\n        </ScrollView>\r\n\r\n\r\n    );\r\n}\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nfunction ProfileStack() {\r\n    return (\r\n        <NavigationContainer independent={true}>\r\n            <Stack.Navigator initialRouteName='ProfileItems'>\r\n                <Stack.Screen name='Main' component={ProfileItems} options={{ headerShown: false }} />\r\n                <Stack.Screen name='Goals' component={Goals} />\r\n                <Stack.Screen name='ProfilePage' component={ProfilePage} />\r\n                <Stack.Screen name='Settings' component={Settings} />\r\n                <Stack.Screen name='Help' component={Help} />\r\n            </Stack.Navigator>\r\n        </NavigationContainer>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n\r\n    container: {\r\n        justifyContent: 'center',\r\n        alignContent: 'center',\r\n        flex: 1,\r\n    },\r\n\r\n    row: {\r\n        flexDirection: 'column',\r\n        height: 90,\r\n        margin: 8,\r\n        justifyContent: 'center',\r\n        alignContent: 'center',\r\n        borderColor: '#CCCCCC',\r\n        borderWidth: 0.2,\r\n        borderRadius: 15,\r\n    },\r\n\r\n    content: {\r\n        marginLeft: 10,\r\n        fontSize: 20,\r\n        marginRight: 10,\r\n        justifyContent: 'center',\r\n        alignContent: 'center',\r\n        textAlign: 'center',\r\n    },\r\n\r\n});\r\n\r\nexport default ProfileStack;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}