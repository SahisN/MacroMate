{"ast":null,"code":"import React, { Component, useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport LogList from \"./LogPage_component/LogList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar BreakFast = [{\n  key: 'item1',\n  value: 'Eggs'\n}, {\n  key: 'item2',\n  value: 'Orange Juice'\n}];\nvar name = [{\n  name: \"Name1\"\n}, {\n  name: \"Name2\"\n}];\nvar Lunch = [{\n  key: 'item1',\n  value: 'Rice'\n}, {\n  key: 'item2',\n  value: 'Chicken'\n}];\nvar Dinner = [{\n  key: 'item1',\n  value: 'Steak'\n}, {\n  key: 'item2',\n  value: 'mash potato'\n}];\nvar Snacks = [{\n  key: 'item1',\n  value: 'Peas'\n}, {\n  key: 'item2',\n  value: 'Carrots'\n}];\nfunction AddFood() {\n  return _jsx(View, {\n    children: _jsx(Text, {\n      children: \"Add Food\"\n    })\n  });\n}\nfunction LogPage(_ref) {\n  var navigation = _ref.navigation;\n  return _jsx(ScrollView, {\n    contentContainerStyle: {\n      padding: 10\n    },\n    children: _jsxs(View, {\n      style: {\n        flex: 1\n      },\n      children: [_jsx(Text, {\n        style: [styles.Text],\n        children: \"BreakFast\"\n      }), _jsx(LogList, {\n        data: BreakFast\n      }), _jsx(View, {\n        style: styles.button,\n        children: _jsx(Button, {\n          title: 'Add Food',\n          onPress: function onPress() {\n            return navigation.navigate('AddFood');\n          }\n        })\n      }), _jsx(Text, {\n        style: [styles.Text, {\n          marginTop: 20\n        }],\n        children: \"Lunch\"\n      }), _jsx(LogList, {\n        data: Lunch\n      }), _jsx(View, {\n        style: styles.button,\n        children: _jsx(Button, {\n          title: 'Add Food',\n          titleStyle: {\n            fontSize: 50\n          }\n        })\n      }), _jsx(Text, {\n        style: [styles.Text, {\n          marginTop: 20\n        }],\n        children: \"Dinner\"\n      }), _jsx(LogList, {\n        data: Dinner\n      }), _jsx(View, {\n        style: styles.button,\n        children: _jsx(Button, {\n          title: 'Add Food',\n          titleStyle: {\n            fontSize: 50\n          }\n        })\n      }), _jsx(Text, {\n        style: [styles.Text, {\n          marginTop: 20\n        }],\n        children: \"Snacks\"\n      }), _jsx(LogList, {\n        data: Snacks\n      }), _jsx(View, {\n        style: styles.button,\n        children: _jsx(Button, {\n          title: 'Add Food',\n          titleStyle: {\n            fontSize: 50\n          }\n        })\n      })]\n    })\n  });\n}\nvar Stack = createNativeStackNavigator();\nfunction StackNav() {\n  return _jsx(NavigationContainer, {\n    independent: true,\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"LogPage\",\n      children: [_jsx(Stack.Screen, {\n        name: \"LogPage\",\n        component: LogPage,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"AddFood\",\n        component: AddFood\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  Text: {\n    fontWeight: 'bold',\n    fontSize: 30,\n    backgroundColor: 'white',\n    padding: 10\n  },\n  Link: {\n    fontWeight: 'bold',\n    fontSize: 30,\n    color: 'blue',\n    marginLeft: 10,\n    marginTop: 1,\n    backgroundColor: 'white'\n  },\n  button: {\n    alignItems: 'flex-start',\n    backgroundColor: 'white',\n    marginTop: 2\n  }\n});\nexport default StackNav;","map":{"version":3,"names":["React","Component","useState","useEffect","Text","View","StyleSheet","Button","FlatList","NavigationContainer","createNativeStackNavigator","LogList","ScrollView","jsx","_jsx","jsxs","_jsxs","BreakFast","key","value","name","Lunch","Dinner","Snacks","AddFood","children","LogPage","_ref","navigation","contentContainerStyle","padding","style","flex","styles","data","button","title","onPress","navigate","marginTop","titleStyle","fontSize","Stack","StackNav","independent","Navigator","initialRouteName","Screen","component","options","headerShown","create","fontWeight","backgroundColor","Link","color","marginLeft","alignItems"],"sources":["/Users/pesos/Documents/GitHub/csula-cs3337swe-202301Group5-repo/Components/Tabs/LogPage.js"],"sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport {Text, View, StyleSheet, Button, FlatList} from 'react-native';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\nimport LogList from './LogPage_component/LogList';\nimport { ScrollView } from 'react-native';\n\n\n\n\nconst BreakFast = [\n    {key: 'item1', value: 'Eggs'},\n    {key: 'item2', value: 'Orange Juice'},\n];\n\nconst name = [\n    {name: \"Name1\"},\n    {name: \"Name2\"},\n];\n\nconst Lunch = [\n    {key: 'item1', value: 'Rice'},\n    {key: 'item2', value: 'Chicken'},\n];\n\nconst Dinner = [\n    {key: 'item1', value: 'Steak'},\n    {key: 'item2', value: 'mash potato'},\n];\n\nconst Snacks = [\n    {key: 'item1', value: 'Peas'},\n    {key: 'item2', value: 'Carrots'},\n];\n\n    function AddFood(){\n        return(\n            <View>\n                <Text>Add Food</Text>\n            </View>\n        );\n    }\n\n\n    function LogPage({navigation}){\n        return(\n            <ScrollView contentContainerStyle={{padding: 10}}>\n                <View style={{flex: 1}}>\n                    <Text style={[styles.Text]}>BreakFast</Text>\n                    <LogList data={BreakFast} />\n                    <View style={styles.button}><Button title={'Add Food'} onPress={() => navigation.navigate('AddFood')}/></View>\n                    \n                    <Text style={[styles.Text,{marginTop:20}]}>Lunch</Text>\n                    <LogList data={Lunch}/>\n                    <View style={styles.button}><Button title={'Add Food'} titleStyle={{fontSize: 50}}/></View>\n                    \n                    <Text style={[styles.Text, {marginTop: 20}]}>Dinner</Text>\n                    <LogList data={Dinner}/>\n                    <View style={styles.button}><Button title={'Add Food'} titleStyle={{fontSize: 50}}/></View>\n\n                    <Text style={[styles.Text, {marginTop: 20}]}>Snacks</Text>\n                    <LogList data={Snacks}/>\n                    <View style={styles.button}><Button title={'Add Food'} titleStyle={{fontSize: 50}}/></View>\n\n                </View>\n            </ScrollView>\n            \n        );\n    }\n\n    const Stack = createNativeStackNavigator();\n\n    function StackNav(){\n        return(\n            \n            <NavigationContainer independent={true}>\n                <Stack.Navigator initialRouteName='LogPage' >\n                    <Stack.Screen name='LogPage' component={LogPage} options={{headerShown: false}}/>\n                    <Stack.Screen name='AddFood' component={AddFood}/>\n                </Stack.Navigator>\n            </NavigationContainer>\n            \n        );\n\n    }\n\n\n\n\nconst styles = StyleSheet.create({\n    Text: \n    {\n       fontWeight:'bold',\n       fontSize:30,\n       backgroundColor:'white',\n       padding:10\n    },\n    \n    Link: \n    {\n        fontWeight:'bold',\n        fontSize:30,\n        color:'blue',\n        marginLeft: 10,\n        marginTop:1,\n        backgroundColor:'white'\n    },\n\n    button: \n    {\n        alignItems:'flex-start',\n        backgroundColor:'white',\n        marginTop: 2,\n    },\n       \n});\n\nexport default StackNav;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,QAAA;AAE9D,SAAQC,mBAAmB,QAAO,0BAA0B;AAC5D,SAAQC,0BAA0B,QAAO,gCAAgC;AACzE,OAAOC,OAAO;AAAoC,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAMlD,IAAMC,SAAS,GAAG,CACd;EAACC,GAAG,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAM,CAAC,EAC7B;EAACD,GAAG,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAc,CAAC,CACxC;AAED,IAAMC,IAAI,GAAG,CACT;EAACA,IAAI,EAAE;AAAO,CAAC,EACf;EAACA,IAAI,EAAE;AAAO,CAAC,CAClB;AAED,IAAMC,KAAK,GAAG,CACV;EAACH,GAAG,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAM,CAAC,EAC7B;EAACD,GAAG,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAS,CAAC,CACnC;AAED,IAAMG,MAAM,GAAG,CACX;EAACJ,GAAG,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAO,CAAC,EAC9B;EAACD,GAAG,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAa,CAAC,CACvC;AAED,IAAMI,MAAM,GAAG,CACX;EAACL,GAAG,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAM,CAAC,EAC7B;EAACD,GAAG,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAS,CAAC,CACnC;AAEG,SAASK,OAAOA,CAAA,EAAE;EACd,OACIV,IAAA,CAACT,IAAI;IAAAoB,QAAA,EACDX,IAAA,CAACV,IAAI;MAAAqB,QAAA,EAAC;IAAQ;EAAO,EAClB;AAEf;AAGA,SAASC,OAAOA,CAAAC,IAAA,EAAc;EAAA,IAAZC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EACxB,OACId,IAAA,CAACF,UAAU;IAACiB,qBAAqB,EAAE;MAACC,OAAO,EAAE;IAAE,CAAE;IAAAL,QAAA,EAC7CT,KAAA,CAACX,IAAI;MAAC0B,KAAK,EAAE;QAACC,IAAI,EAAE;MAAC,CAAE;MAAAP,QAAA,GACnBX,IAAA,CAACV,IAAI;QAAC2B,KAAK,EAAE,CAACE,MAAM,CAAC7B,IAAI,CAAE;QAAAqB,QAAA,EAAC;MAAS,EAAO,EAC5CX,IAAA,CAACH,OAAO;QAACuB,IAAI,EAAEjB;MAAU,EAAG,EAC5BH,IAAA,CAACT,IAAI;QAAC0B,KAAK,EAAEE,MAAM,CAACE,MAAO;QAAAV,QAAA,EAACX,IAAA,CAACP,MAAM;UAAC6B,KAAK,EAAE,UAAW;UAACC,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMT,UAAU,CAACU,QAAQ,CAAC,SAAS,CAAC;UAAA;QAAC;MAAE,EAAO,EAE9GxB,IAAA,CAACV,IAAI;QAAC2B,KAAK,EAAE,CAACE,MAAM,CAAC7B,IAAI,EAAC;UAACmC,SAAS,EAAC;QAAE,CAAC,CAAE;QAAAd,QAAA,EAAC;MAAK,EAAO,EACvDX,IAAA,CAACH,OAAO;QAACuB,IAAI,EAAEb;MAAM,EAAE,EACvBP,IAAA,CAACT,IAAI;QAAC0B,KAAK,EAAEE,MAAM,CAACE,MAAO;QAAAV,QAAA,EAACX,IAAA,CAACP,MAAM;UAAC6B,KAAK,EAAE,UAAW;UAACI,UAAU,EAAE;YAACC,QAAQ,EAAE;UAAE;QAAE;MAAE,EAAO,EAE3F3B,IAAA,CAACV,IAAI;QAAC2B,KAAK,EAAE,CAACE,MAAM,CAAC7B,IAAI,EAAE;UAACmC,SAAS,EAAE;QAAE,CAAC,CAAE;QAAAd,QAAA,EAAC;MAAM,EAAO,EAC1DX,IAAA,CAACH,OAAO;QAACuB,IAAI,EAAEZ;MAAO,EAAE,EACxBR,IAAA,CAACT,IAAI;QAAC0B,KAAK,EAAEE,MAAM,CAACE,MAAO;QAAAV,QAAA,EAACX,IAAA,CAACP,MAAM;UAAC6B,KAAK,EAAE,UAAW;UAACI,UAAU,EAAE;YAACC,QAAQ,EAAE;UAAE;QAAE;MAAE,EAAO,EAE3F3B,IAAA,CAACV,IAAI;QAAC2B,KAAK,EAAE,CAACE,MAAM,CAAC7B,IAAI,EAAE;UAACmC,SAAS,EAAE;QAAE,CAAC,CAAE;QAAAd,QAAA,EAAC;MAAM,EAAO,EAC1DX,IAAA,CAACH,OAAO;QAACuB,IAAI,EAAEX;MAAO,EAAE,EACxBT,IAAA,CAACT,IAAI;QAAC0B,KAAK,EAAEE,MAAM,CAACE,MAAO;QAAAV,QAAA,EAACX,IAAA,CAACP,MAAM;UAAC6B,KAAK,EAAE,UAAW;UAACI,UAAU,EAAE;YAACC,QAAQ,EAAE;UAAE;QAAE;MAAE,EAAO;IAAA;EAExF,EACE;AAGrB;AAEA,IAAMC,KAAK,GAAGhC,0BAA0B,EAAE;AAE1C,SAASiC,QAAQA,CAAA,EAAE;EACf,OAEI7B,IAAA,CAACL,mBAAmB;IAACmC,WAAW,EAAE,IAAK;IAAAnB,QAAA,EACnCT,KAAA,CAAC0B,KAAK,CAACG,SAAS;MAACC,gBAAgB,EAAC,SAAS;MAAArB,QAAA,GACvCX,IAAA,CAAC4B,KAAK,CAACK,MAAM;QAAC3B,IAAI,EAAC,SAAS;QAAC4B,SAAS,EAAEtB,OAAQ;QAACuB,OAAO,EAAE;UAACC,WAAW,EAAE;QAAK;MAAE,EAAE,EACjFpC,IAAA,CAAC4B,KAAK,CAACK,MAAM;QAAC3B,IAAI,EAAC,SAAS;QAAC4B,SAAS,EAAExB;MAAQ,EAAE;IAAA;EACpC,EACA;AAI9B;AAKJ,IAAMS,MAAM,GAAG3B,UAAU,CAAC6C,MAAM,CAAC;EAC7B/C,IAAI,EACJ;IACGgD,UAAU,EAAC,MAAM;IACjBX,QAAQ,EAAC,EAAE;IACXY,eAAe,EAAC,OAAO;IACvBvB,OAAO,EAAC;EACX,CAAC;EAEDwB,IAAI,EACJ;IACIF,UAAU,EAAC,MAAM;IACjBX,QAAQ,EAAC,EAAE;IACXc,KAAK,EAAC,MAAM;IACZC,UAAU,EAAE,EAAE;IACdjB,SAAS,EAAC,CAAC;IACXc,eAAe,EAAC;EACpB,CAAC;EAEDlB,MAAM,EACN;IACIsB,UAAU,EAAC,YAAY;IACvBJ,eAAe,EAAC,OAAO;IACvBd,SAAS,EAAE;EACf;AAEJ,CAAC,CAAC;AAEF,eAAeI,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}