{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useEffect } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport { AntDesign } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction AddFood(_ref) {\n  var route = _ref.route;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    searchTerm = _useState2[0],\n    setSearchTerm = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    barcode = _useState4[0],\n    setBarcode = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    currentFood = _useState6[0],\n    setCurrentFood = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    showScanner = _useState8[0],\n    setShowScanner = _useState8[1];\n  var handleInputChange = function handleInputChange(text) {\n    setSearchTerm(text);\n  };\n  var handleSearchClick = function handleSearchClick() {};\n  var navigation = useNavigation();\n  var handleScanBarcodePress = function handleScanBarcodePress() {\n    setShowScanner(true);\n  };\n  var handleBarCodeScanned = function handleBarCodeScanned(_ref2) {\n    var type = _ref2.type,\n      data = _ref2.data;\n    console.log(\"Bar code with type \" + type + \" and data \" + data + \" has been scanned!\");\n    setBarcode(data);\n    setShowScanner(false);\n  };\n  var handleFloatingButton = function handleFloatingButton() {\n    navigation.navigate('BarcodeSearch');\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsxs(View, {\n      style: styles.container,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        value: searchTerm,\n        onChangeText: handleInputChange,\n        placeholder: \"Search...\"\n      }), _jsx(Button, {\n        title: \"Search\",\n        onPress: handleSearchClick\n      }), _jsx(TouchableOpacity, {\n        onPress: handleScanBarcodePress,\n        children: _jsx(AntDesign, {\n          name: \"scan1\",\n          size: 24,\n          color: \"black\"\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.floating,\n      children: _jsx(TouchableOpacity, {\n        onPress: handleFloatingButton,\n        children: _jsx(AntDesign, {\n          name: \"plus\",\n          size: 24,\n          color: \"white\"\n        })\n      })\n    }), showScanner && _jsx(BarCodeScanner, {\n      onBarCodeScanned: handleBarCodeScanned,\n      style: _objectSpread({}, StyleSheet.absoluteFillObject)\n    })]\n  });\n}\nexport default AddFood;\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  input: {\n    flex: 1,\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  },\n  floating: {\n    position: 'absolute',\n    bottom: 20,\n    right: 20,\n    backgroundColor: 'blue',\n    borderRadius: 25,\n    width: 50,\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","Button","TextInput","View","StyleSheet","TouchableOpacity","BarCodeScanner","AntDesign","useNavigation","jsx","_jsx","jsxs","_jsxs","AddFood","_ref","route","_useState","_useState2","_slicedToArray","searchTerm","setSearchTerm","_useState3","_useState4","barcode","setBarcode","_useState5","_useState6","currentFood","setCurrentFood","_useState7","_useState8","showScanner","setShowScanner","handleInputChange","text","handleSearchClick","navigation","handleScanBarcodePress","handleBarCodeScanned","_ref2","type","data","console","log","handleFloatingButton","navigate","style","flex","children","styles","container","input","value","onChangeText","placeholder","title","onPress","name","size","color","floating","onBarCodeScanned","_objectSpread","absoluteFillObject","create","flexDirection","alignItems","justifyContent","height","margin","borderWidth","padding","position","bottom","right","backgroundColor","borderRadius","width"],"sources":["C:/Users/jtigu/Downloads/Github repo/csula-cs3337swe-202301Group5-repo/Components/Tabs/AddFood.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button, TextInput, View, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport { BarCodeScanner } from 'expo-barcode-scanner';\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\n\r\nfunction AddFood({ route }) {\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [barcode, setBarcode] = useState(null);\r\n    const [currentFood, setCurrentFood] = useState(null);\r\n    const [showScanner, setShowScanner] = useState(false);\r\n\r\n    const handleInputChange = (text) => {\r\n        setSearchTerm(text);\r\n    };\r\n\r\n    const handleSearchClick = () => {\r\n\r\n    };\r\n\r\n    const navigation = useNavigation();\r\n\r\n    const handleScanBarcodePress = () => {\r\n        setShowScanner(true);\r\n    };\r\n\r\n    const handleBarCodeScanned = ({ type, data }) => {\r\n        console.log(`Bar code with type ${type} and data ${data} has been scanned!`);\r\n        setBarcode(data);\r\n        setShowScanner(false);\r\n    };\r\n\r\n    const handleFloatingButton = () => {\r\n        navigation.navigate('BarcodeSearch');\r\n    };\r\n\r\n    return (\r\n        <View style={{ flex: 1 }}>\r\n            <View style={styles.container}>\r\n                <TextInput\r\n                    style={styles.input}\r\n                    value={searchTerm}\r\n                    onChangeText={handleInputChange}\r\n                    placeholder=\"Search...\"\r\n                />\r\n                <Button title=\"Search\" onPress={handleSearchClick} />\r\n                <TouchableOpacity onPress={handleScanBarcodePress}>\r\n                    <AntDesign name=\"scan1\" size={24} color=\"black\" />\r\n                </TouchableOpacity>\r\n            </View>\r\n            <View style={styles.floating}>\r\n                <TouchableOpacity onPress={handleFloatingButton}>\r\n                    <AntDesign name=\"plus\" size={24} color=\"white\" />\r\n                </TouchableOpacity>\r\n            </View>\r\n            {showScanner && (\r\n                <BarCodeScanner\r\n                    onBarCodeScanned={handleBarCodeScanned}\r\n                    style={{ ...StyleSheet.absoluteFillObject }}\r\n                />\r\n            )}\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default AddFood;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    input: {\r\n        flex: 1,\r\n        height: 40,\r\n        margin: 12,\r\n        borderWidth: 1,\r\n        padding: 10,\r\n    },\r\n    floating: { \r\n        position: 'absolute',\r\n        bottom: 20,\r\n        right: 20,\r\n        backgroundColor: 'blue',\r\n        borderRadius: 25,\r\n        width: 50,\r\n        height: 50,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}