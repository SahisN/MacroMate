{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { PieChart } from 'react-native-chart-kit';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MacroNutrients = function MacroNutrients() {\n  var _useState = useState(50),\n    _useState2 = _slicedToArray(_useState, 2),\n    protein = _useState2[0],\n    setProtein = _useState2[1];\n  var _useState3 = useState(50),\n    _useState4 = _slicedToArray(_useState3, 2),\n    carbs = _useState4[0],\n    setCarbs = _useState4[1];\n  var _useState5 = useState(50),\n    _useState6 = _slicedToArray(_useState5, 2),\n    fat = _useState6[0],\n    setFat = _useState6[1];\n  var updateProtein = function updateProtein(value) {\n    if (/^\\d+$/.test(value)) {\n      setProtein(parseInt(value));\n    } else if (value === '') {\n      setProtein(0);\n    }\n  };\n  var updateCarbs = function updateCarbs(value) {\n    if (/^\\d+$/.test(value)) {\n      setCarbs(parseInt(value));\n    } else if (value === '') {\n      setCarbs(0);\n    }\n  };\n  var updateFat = function updateFat(value) {\n    if (/^\\d+$/.test(value)) {\n      setFat(parseInt(value));\n    } else if (value === '') {\n      setFat(0);\n    }\n  };\n  var data = [{\n    name: 'Protein',\n    value: protein,\n    color: 'green'\n  }, {\n    name: 'Carbs',\n    value: carbs,\n    color: 'gold'\n  }, {\n    name: 'Fat',\n    value: fat,\n    color: '#ff0000'\n  }];\n  var chartConfig = {\n    backgroundGradientFrom: '#1E2923',\n    backgroundGradientTo: '#08130D',\n    color: function color() {\n      var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      return \"rgba(26, 255, 146, \" + opacity + \")\";\n    }\n  };\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 24,\n        textAlign: 'center'\n      },\n      children: \"Macro Nutrients\"\n    }), _jsxs(View, {\n      style: {\n        borderWidth: 1,\n        borderColor: 'gray',\n        padding: 10\n      },\n      children: [_jsx(PieChart, {\n        data: data,\n        width: 300,\n        height: 200,\n        chartConfig: chartConfig,\n        accessor: \"value\",\n        backgroundColor: \"transparent\",\n        paddingLeft: \"80\",\n        absolute: true\n      }), data.map(function (item, index) {\n        return _jsxs(View, {\n          style: {\n            flexDirection: 'row',\n            alignItems: 'center'\n          },\n          children: [_jsx(View, {\n            style: {\n              width: 10,\n              height: 10,\n              backgroundColor: item.color,\n              marginRight: 10\n            }\n          }), _jsxs(Text, {\n            style: {\n              fontSize: 22\n            },\n            children: [item.name, \":\"]\n          }), _jsxs(Text, {\n            style: {\n              fontSize: 22,\n              marginLeft: 5\n            },\n            children: [item.value, \"g\"]\n          })]\n        }, index);\n      })]\n    }), _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        marginTop: 20,\n        paddingBottom: 69\n      },\n      children: [_jsxs(View, {\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 18\n          },\n          children: \"Protein:\"\n        }), _jsx(TextInput, {\n          value: protein.toString(),\n          onChangeText: updateProtein,\n          keyboardType: 'numeric',\n          style: {\n            fontSize: 24,\n            borderWidth: 1,\n            borderColor: 'gray',\n            padding: 5\n          }\n        }), _jsx(Text, {\n          style: {\n            fontSize: 18,\n            marginLeft: 5\n          },\n          children: \"g\"\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 18\n          },\n          children: \"Carbs:\"\n        }), _jsx(TextInput, {\n          value: carbs.toString(),\n          onChangeText: updateCarbs,\n          keyboardType: 'numeric',\n          style: {\n            fontSize: 24,\n            borderWidth: 1,\n            borderColor: 'gray',\n            padding: 5\n          }\n        }), _jsx(Text, {\n          style: {\n            fontSize: 18,\n            marginLeft: 5\n          },\n          children: \"g\"\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 18\n          },\n          children: \"Fat: \"\n        }), _jsx(TextInput, {\n          value: fat.toString(),\n          onChangeText: updateFat,\n          keyboardType: 'numeric',\n          style: {\n            fontSize: 24,\n            borderWidth: 1,\n            borderColor: 'gray',\n            padding: 5\n          }\n        }), _jsx(Text, {\n          style: {\n            fontSize: 18,\n            marginLeft: 5\n          },\n          children: \"g\"\n        })]\n      })]\n    })]\n  });\n};\nexport default MacroNutrients;","map":{"version":3,"names":["React","useState","View","Text","TextInput","PieChart","jsx","_jsx","jsxs","_jsxs","MacroNutrients","_useState","_useState2","_slicedToArray","protein","setProtein","_useState3","_useState4","carbs","setCarbs","_useState5","_useState6","fat","setFat","updateProtein","value","test","parseInt","updateCarbs","updateFat","data","name","color","chartConfig","backgroundGradientFrom","backgroundGradientTo","opacity","arguments","length","undefined","children","style","fontSize","textAlign","borderWidth","borderColor","padding","width","height","accessor","backgroundColor","paddingLeft","absolute","map","item","index","flexDirection","alignItems","marginRight","marginLeft","justifyContent","marginTop","paddingBottom","toString","onChangeText","keyboardType"],"sources":["C:/Users/jenli/csula-cs3337swe-202301Group5-repo/Components/Tabs/Dashboard_component/MacroNutrients.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput } from 'react-native';\r\nimport { PieChart } from 'react-native-chart-kit';\r\n\r\nconst MacroNutrients = () => {\r\n  const [protein, setProtein] = useState(50);\r\n  const [carbs, setCarbs] = useState(50);\r\n  const [fat, setFat] = useState(50);\r\n\r\n  const updateProtein = (value) => {\r\n    if (/^\\d+$/.test(value)) {\r\n      setProtein(parseInt(value));\r\n    } else if (value === '') {\r\n      setProtein(0);\r\n    }\r\n  };\r\n\r\n  const updateCarbs = (value) => {\r\n    if (/^\\d+$/.test(value)) {\r\n      setCarbs(parseInt(value));\r\n    } else if (value === '') {\r\n      setCarbs(0);\r\n    }\r\n  };\r\n\r\n  const updateFat = (value) => {\r\n    if (/^\\d+$/.test(value)) {\r\n      setFat(parseInt(value));\r\n    } else if (value === '') {\r\n      setFat(0);\r\n    }\r\n  };\r\n\r\n  const data = [{ name: 'Protein', value: protein, color: 'green' }, { name: 'Carbs', value: carbs, color: 'gold' }, { name: 'Fat', value: fat, color: '#ff0000' },];\r\n\r\n  const chartConfig = {\r\n    backgroundGradientFrom: '#1E2923',\r\n    backgroundGradientTo: '#08130D',\r\n    color: (opacity = 1) => `rgba(26, 255, 146, ${opacity})`,\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <Text style={{ fontSize: 24, textAlign: 'center' }}>Macro Nutrients</Text>\r\n      <View style={{ borderWidth: 1, borderColor: 'gray', padding: 10 }}>\r\n        <PieChart\r\n          data={data}\r\n          width={300}\r\n          height={200}\r\n          chartConfig={chartConfig}\r\n          accessor=\"value\"\r\n          backgroundColor=\"transparent\"\r\n          paddingLeft=\"80\"\r\n          absolute\r\n        />\r\n        {data.map((item, index) => (\r\n          <View key={index} style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n            <View style={{ width: 10, height: 10, backgroundColor: item.color, marginRight: 10 }} />\r\n            <Text style={{ fontSize: 22 }}>{item.name}:</Text>\r\n            <Text style={{ fontSize: 22, marginLeft: 5 }}>{item.value}g</Text>\r\n          </View>\r\n         \r\n        ))}\r\n      </View>\r\n      <View style={{ flexDirection: 'row', justifyContent: 'space-between', marginTop: 20, paddingBottom: 69 }}>\r\n        <View>\r\n          <Text style={{ fontSize: 18 }}>Protein:</Text>\r\n          <TextInput\r\n            value={protein.toString()}\r\n            onChangeText={updateProtein}\r\n            keyboardType={'numeric'}\r\n            style={{ fontSize: 24, borderWidth: 1, borderColor: 'gray', padding: 5 }}\r\n          />\r\n          <Text style={{ fontSize: 18, marginLeft: 5 }}>g</Text>\r\n        </View>\r\n        <View>\r\n          <Text style={{ fontSize: 18 }}>Carbs:</Text>\r\n          <TextInput\r\n            value={carbs.toString()}\r\n            onChangeText={updateCarbs}\r\n            keyboardType={'numeric'}\r\n            style={{ fontSize: 24, borderWidth: 1, borderColor: 'gray', padding: 5 }}\r\n          />\r\n          <Text style={{ fontSize: 18, marginLeft: 5 }}>g</Text>\r\n        </View>\r\n        <View>\r\n          <Text style={{ fontSize: 18 }}>Fat: </Text>\r\n          <TextInput\r\n            value={fat.toString()}\r\n            onChangeText={updateFat}\r\n            keyboardType={'numeric'}\r\n            style={{ fontSize: 24, borderWidth: 1, borderColor: 'gray', padding: 5 }}\r\n          />\r\n          <Text style={{ fontSize: 18, marginLeft: 5 }}>g</Text>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default MacroNutrients;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}