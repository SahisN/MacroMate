{"ast":null,"code":"import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer } from '@react-navigation/native';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport Dashboard from \"./Tabs/Dashboard\";\nimport LogPage from \"./Tabs/LogPage\";\nimport Goal from \"./Tabs/Goal\";\nimport Profile from \"./Tabs/Profile\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar dashboard = 'Dashboard';\nvar logPage = 'Log';\nvar goal = 'Goal';\nvar profile = 'Profile';\nvar stacknav = 'Log';\nvar Tab = createBottomTabNavigator();\nexport default function TabNavigator() {\n  return _jsx(NavigationContainer, {\n    independent: true,\n    children: _jsxs(Tab.Navigator, {\n      initialRouteName: \"\",\n      independent: true,\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n            var iconName;\n            var routeName = route.name;\n            if (routeName === dashboard) {\n              iconName = focused ? 'grid' : 'grid-outline';\n            } else if (routeName === stacknav) {\n              iconName = focused ? 'book' : 'book-outline';\n            } else if (routeName === goal) {\n              iconName = focused ? 'calendar' : 'calendar-outline';\n            } else if (routeName === profile) {\n              iconName = focused ? 'person' : 'person-outline';\n            }\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: 'black',\n          tabBarInactiveTintColor: 'grey',\n          tabBarLabelStyle: {\n            paddingBottom: 5,\n            fontSize: 10\n          },\n          style: {\n            padding: 10,\n            height: 70\n          }\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: dashboard,\n        component: Dashboard\n      }), _jsx(Tab.Screen, {\n        name: logPage,\n        component: LogPage\n      }), _jsx(Tab.Screen, {\n        name: goal,\n        component: Goal\n      }), _jsx(Tab.Screen, {\n        name: profile,\n        component: Profile\n      })]\n    })\n  });\n}","map":{"version":3,"names":["createBottomTabNavigator","NavigationContainer","React","StyleSheet","Ionicons","Dashboard","LogPage","Goal","Profile","jsx","_jsx","jsxs","_jsxs","dashboard","logPage","goal","profile","stacknav","Tab","TabNavigator","independent","children","Navigator","initialRouteName","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","routeName","name","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarLabelStyle","paddingBottom","fontSize","style","padding","height","Screen","component"],"sources":["C:/Users/jenli/csula-cs3337swe-202301Group5-repo/Components/TabNavigator.js"],"sourcesContent":["import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport React from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\n\r\nimport Dashboard from './Tabs/Dashboard';\r\nimport LogPage from './Tabs/LogPage';\r\nimport Goal from './Tabs/Goal';\r\nimport Profile from './Tabs/Profile';\r\n\r\n\r\n// Tab names\r\nconst dashboard = 'Dashboard';\r\nconst logPage = 'Log';\r\nconst goal = 'Goal';\r\nconst profile = 'Profile';\r\nconst stacknav = 'Log'\r\n\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport default function TabNavigator() {\r\n  return (\r\n    <NavigationContainer independent={true}>\r\n      <Tab.Navigator initialRouteName = \"\" independent={true} screenOptions={({route}) => ({\r\n        tabBarIcon: ({focused, color, size}) => {\r\n          let iconName;\r\n          let routeName = route.name;\r\n\r\n          if (routeName === dashboard)\r\n          {\r\n            iconName = focused ? 'grid': 'grid-outline'\r\n          }\r\n\r\n          else if(routeName === stacknav)\r\n          {\r\n            iconName = focused ? 'book' : 'book-outline'\r\n          }\r\n\r\n          else if(routeName === goal)\r\n          {\r\n            iconName = focused ? 'calendar' : 'calendar-outline'\r\n          }\r\n\r\n          else if(routeName === profile)\r\n          {\r\n            iconName = focused ? 'person' : 'person-outline'\r\n          }\r\n\r\n          return <Ionicons name={iconName} size={size} color={color}/>\r\n\r\n        },\r\n        tabBarActiveTintColor: 'black',\r\n        tabBarInactiveTintColor: 'grey',\r\n        tabBarLabelStyle: {paddingBottom: 5, fontSize: 10},\r\n        style: {padding:10, height: 70}\r\n        \r\n      })}>\r\n\r\n        <Tab.Screen name={dashboard} component={Dashboard}/>\r\n        <Tab.Screen name={logPage} component={LogPage}/>\r\n        <Tab.Screen name={goal} component={Goal}/>\r\n        <Tab.Screen name={profile} component={Profile}/>\r\n       \r\n      </Tab.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n"],"mappings":"AAAA,SAASA,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAOC,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAE1B,OAAOC,QAAQ;AAEf,OAAOC,SAAS;AAChB,OAAOC,OAAO;AACd,OAAOC,IAAI;AACX,OAAOC,OAAO;AAAuB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAIrC,IAAMC,SAAS,GAAG,WAAW;AAC7B,IAAMC,OAAO,GAAG,KAAK;AACrB,IAAMC,IAAI,GAAG,MAAM;AACnB,IAAMC,OAAO,GAAG,SAAS;AACzB,IAAMC,QAAQ,GAAG,KAAK;AAGtB,IAAMC,GAAG,GAAGlB,wBAAwB,EAAE;AAEtC,eAAe,SAASmB,YAAYA,CAAA,EAAG;EACrC,OACET,IAAA,CAACT,mBAAmB;IAACmB,WAAW,EAAE,IAAK;IAAAC,QAAA,EACrCT,KAAA,CAACM,GAAG,CAACI,SAAS;MAACC,gBAAgB,EAAG,EAAE;MAACH,WAAW,EAAE,IAAK;MAACI,aAAa,EAAE,SAAAA,cAAAC,IAAA;QAAA,IAAEC,KAAK,GAAAD,IAAA,CAALC,KAAK;QAAA,OAAO;UACnFC,UAAU,EAAE,SAAAA,WAAAC,KAAA,EAA4B;YAAA,IAA1BC,OAAO,GAAAD,KAAA,CAAPC,OAAO;cAAEC,KAAK,GAAAF,KAAA,CAALE,KAAK;cAAEC,IAAI,GAAAH,KAAA,CAAJG,IAAI;YAChC,IAAIC,QAAQ;YACZ,IAAIC,SAAS,GAAGP,KAAK,CAACQ,IAAI;YAE1B,IAAID,SAAS,KAAKpB,SAAS,EAC3B;cACEmB,QAAQ,GAAGH,OAAO,GAAG,MAAM,GAAE,cAAc;YAC7C,CAAC,MAEI,IAAGI,SAAS,KAAKhB,QAAQ,EAC9B;cACEe,QAAQ,GAAGH,OAAO,GAAG,MAAM,GAAG,cAAc;YAC9C,CAAC,MAEI,IAAGI,SAAS,KAAKlB,IAAI,EAC1B;cACEiB,QAAQ,GAAGH,OAAO,GAAG,UAAU,GAAG,kBAAkB;YACtD,CAAC,MAEI,IAAGI,SAAS,KAAKjB,OAAO,EAC7B;cACEgB,QAAQ,GAAGH,OAAO,GAAG,QAAQ,GAAG,gBAAgB;YAClD;YAEA,OAAOnB,IAAA,CAACN,QAAQ;cAAC8B,IAAI,EAAEF,QAAS;cAACD,IAAI,EAAEA,IAAK;cAACD,KAAK,EAAEA;YAAM,EAAE;UAE9D,CAAC;UACDK,qBAAqB,EAAE,OAAO;UAC9BC,uBAAuB,EAAE,MAAM;UAC/BC,gBAAgB,EAAE;YAACC,aAAa,EAAE,CAAC;YAAEC,QAAQ,EAAE;UAAE,CAAC;UAClDC,KAAK,EAAE;YAACC,OAAO,EAAC,EAAE;YAAEC,MAAM,EAAE;UAAE;QAEhC,CAAC;MAAA,CAAE;MAAArB,QAAA,GAEDX,IAAA,CAACQ,GAAG,CAACyB,MAAM;QAACT,IAAI,EAAErB,SAAU;QAAC+B,SAAS,EAAEvC;MAAU,EAAE,EACpDK,IAAA,CAACQ,GAAG,CAACyB,MAAM;QAACT,IAAI,EAAEpB,OAAQ;QAAC8B,SAAS,EAAEtC;MAAQ,EAAE,EAChDI,IAAA,CAACQ,GAAG,CAACyB,MAAM;QAACT,IAAI,EAAEnB,IAAK;QAAC6B,SAAS,EAAErC;MAAK,EAAE,EAC1CG,IAAA,CAACQ,GAAG,CAACyB,MAAM;QAACT,IAAI,EAAElB,OAAQ;QAAC4B,SAAS,EAAEpC;MAAQ,EAAE;IAAA;EAElC,EACI;AAE1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}