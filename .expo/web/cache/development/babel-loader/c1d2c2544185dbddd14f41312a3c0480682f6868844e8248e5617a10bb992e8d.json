{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport { useRoute } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar FoodInput = function FoodInput() {\n  var route = useRoute();\n  var foodId = route.params.foodId;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    food = _useState2[0],\n    setFood = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedPortion = _useState4[0],\n    setSelectedPortion = _useState4[1];\n  useEffect(function () {\n    var fetchFoodDetails = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var apiKey = 'sd8DWPmBSnFocMzJvTzQ6JcE1vHRxsabdd08JOC8';\n          var endpoint = \"https://api.nal.usda.gov/fdc/v1/foods/search?api_key=\" + apiKey + \"&query=\" + query;\n          setFood(response.data);\n        } catch (error) {\n          console.error('Error fetching data:', error);\n        }\n      });\n      return function fetchFoodDetails() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchFoodDetails();\n  }, [foodId]);\n  if (!food) {\n    return _jsx(Text, {\n      children: \"Loading...\"\n    });\n  }\n  var handlePortionChange = function handlePortionChange(value) {\n    setSelectedPortion(value);\n  };\n  var portionSizes = [{\n    label: 'Small',\n    multiplier: 1\n  }, {\n    label: 'Medium',\n    multiplier: 1.5\n  }, {\n    label: 'Large',\n    multiplier: 2\n  }];\n  var calculateNutrition = function calculateNutrition(nutritionValue) {\n    if (!selectedPortion) return nutritionValue;\n    var portion = portionSizes.find(function (p) {\n      return p.label === selectedPortion;\n    });\n    return nutritionValue * portion.multiplier;\n  };\n};","map":{"version":3,"names":["React","useState","useEffect","axios","View","Text","Picker","useRoute","jsx","_jsx","FoodInput","route","foodId","params","_useState","_useState2","_slicedToArray","food","setFood","_useState3","_useState4","selectedPortion","setSelectedPortion","fetchFoodDetails","_ref","_asyncToGenerator","apiKey","endpoint","query","response","data","error","console","apply","arguments","children","handlePortionChange","value","portionSizes","label","multiplier","calculateNutrition","nutritionValue","portion","find","p"],"sources":["C:/Users/jenli/csula-cs3337swe-202301Group5-repo/Components/FoodInput.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { View, Text, Picker } from 'react-native';\r\nimport { useRoute } from '@react-navigation/native';\r\n\r\nconst FoodInput = () => {\r\n  const route = useRoute();\r\n  const { foodId } = route.params;\r\n  const [food, setFood] = useState(null);\r\n  const [selectedPortion, setSelectedPortion] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchFoodDetails = async () => {\r\n      try {\r\n        const apiKey = 'sd8DWPmBSnFocMzJvTzQ6JcE1vHRxsabdd08JOC8';\r\n        const endpoint = `https://api.nal.usda.gov/fdc/v1/foods/search?api_key=${apiKey}&query=${query}`;\r\n        setFood(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchFoodDetails();\r\n  }, [foodId]);\r\n\r\n  if (!food) {\r\n    return <Text>Loading...</Text>;\r\n  }\r\n\r\n  const handlePortionChange = (value) => {\r\n    setSelectedPortion(value);\r\n  };\r\n\r\n  const portionSizes = [\r\n    { label: 'Small', multiplier: 1 },\r\n    { label: 'Medium', multiplier: 1.5 },\r\n    { label: 'Large', multiplier: 2 },\r\n  ];\r\n\r\n  const calculateNutrition = (nutritionValue) => {\r\n    if (!selectedPortion) return nutritionValue;\r\n    const portion = portionSizes.find((p) => p.label === selectedPortion);\r\n    return nutritionValue * portion.multiplier;\r\n  };\r\n\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAE1B,SAASC,QAAQ,QAAQ,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAEpD,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;EACtB,IAAMC,KAAK,GAAGJ,QAAQ,EAAE;EACxB,IAAQK,MAAM,GAAKD,KAAK,CAACE,MAAM,CAAvBD,MAAM;EACd,IAAAE,SAAA,GAAwBb,QAAQ,CAAC,IAAI,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EACpB,IAAAI,UAAA,GAA8ClB,QAAQ,CAAC,IAAI,CAAC;IAAAmB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArDE,eAAe,GAAAD,UAAA;IAAEE,kBAAkB,GAAAF,UAAA;EAE1ClB,SAAS,CAAC,YAAM;IACd,IAAMqB,gBAAgB;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;QACnC,IAAI;UACF,IAAMC,MAAM,GAAG,0CAA0C;UACzD,IAAMC,QAAQ,6DAA2DD,MAAM,eAAUE,KAAO;UAChGV,OAAO,CAACW,QAAQ,CAACC,IAAI,CAAC;QACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC9C;MACF,CAAC;MAAA,gBARKR,gBAAgBA,CAAA;QAAA,OAAAC,IAAA,CAAAS,KAAA,OAAAC,SAAA;MAAA;IAAA,GAQrB;IAEDX,gBAAgB,EAAE;EACpB,CAAC,EAAE,CAACX,MAAM,CAAC,CAAC;EAEZ,IAAI,CAACK,IAAI,EAAE;IACT,OAAOR,IAAA,CAACJ,IAAI;MAAA8B,QAAA,EAAC;IAAU,EAAO;EAChC;EAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIC,KAAK,EAAK;IACrCf,kBAAkB,CAACe,KAAK,CAAC;EAC3B,CAAC;EAED,IAAMC,YAAY,GAAG,CACnB;IAAEC,KAAK,EAAE,OAAO;IAAEC,UAAU,EAAE;EAAE,CAAC,EACjC;IAAED,KAAK,EAAE,QAAQ;IAAEC,UAAU,EAAE;EAAI,CAAC,EACpC;IAAED,KAAK,EAAE,OAAO;IAAEC,UAAU,EAAE;EAAE,CAAC,CAClC;EAED,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIC,cAAc,EAAK;IAC7C,IAAI,CAACrB,eAAe,EAAE,OAAOqB,cAAc;IAC3C,IAAMC,OAAO,GAAGL,YAAY,CAACM,IAAI,CAAC,UAACC,CAAC;MAAA,OAAKA,CAAC,CAACN,KAAK,KAAKlB,eAAe;IAAA,EAAC;IACrE,OAAOqB,cAAc,GAAGC,OAAO,CAACH,UAAU;EAC5C,CAAC;AAEH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}