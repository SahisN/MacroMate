{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport CircularProgress from 'react-native-circular-progress-indicator';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ProgressPage = function (_Component) {\n  _inherits(ProgressPage, _Component);\n  var _super = _createSuper(ProgressPage);\n  function ProgressPage(props) {\n    _classCallCheck(this, ProgressPage);\n    return _super.call(this, props);\n  }\n  _createClass(ProgressPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        calories = _this$props.calories,\n        dailyGoal = _this$props.dailyGoal;\n      var progressPercent = calories / dailyGoal * 100;\n      var txt = dailyGoal - calories + \" To Go\";\n      return _jsx(View, {\n        style: {\n          marginLeft: 40\n        },\n        children: _jsx(CircularProgress, {\n          value: calories,\n          radius: 70,\n          maxValue: dailyGoal,\n          inActiveStrokeColor: '#A2A6B9',\n          activeStrokeColor: '#00C2FF',\n          title: 'Calories',\n          titleColor: 'black',\n          progressValueColor: 'black'\n        })\n      });\n    }\n  }]);\n  return ProgressPage;\n}(Component);\nexport default ProgressPage;","map":{"version":3,"names":["React","Component","View","CircularProgress","jsx","_jsx","ProgressPage","_Component","_inherits","_super","_createSuper","props","_classCallCheck","call","_createClass","key","value","render","_this$props","calories","dailyGoal","progressPercent","txt","style","marginLeft","children","radius","maxValue","inActiveStrokeColor","activeStrokeColor","title","titleColor","progressValueColor"],"sources":["C:/Users/jenli/csula-cs3337swe-202301Group5-repo/Components/Tabs/Dashboard_component/ProgressPage.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { View } from 'react-native';\r\nimport CircularProgress from 'react-native-circular-progress-indicator';\r\n\r\nclass ProgressPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { calories, dailyGoal } = this.props;\r\n    const progressPercent = (calories / dailyGoal) * 100;\r\n    const txt = dailyGoal - calories + \" To Go\"\r\n\r\n    return (\r\n      <View style={{ marginLeft: 40 }}>\r\n        <CircularProgress\r\n          value={calories}\r\n          radius={70}\r\n          maxValue={dailyGoal}\r\n          inActiveStrokeColor={'#A2A6B9'}\r\n          activeStrokeColor={'#00C2FF'}\r\n          title={'Calories'}\r\n          titleColor={'black'}\r\n          progressValueColor={'black'}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProgressPage;\r\n\r\n\r\n// import React, { Component, useState, useEffect } from 'react';\r\n// import {View} from 'react-native';\r\n// import CircularProgress from 'react-native-circular-progress-indicator';\r\n\r\n// class ProgressPage extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//       }\r\n//     render(){\r\n//         return(\r\n//             <View style={{marginLeft: 40}}>\r\n//                 <CircularProgress\r\n//                     value={this.props.calories}    \r\n//                     radius={70}\r\n//                     maxValue={this.props.dailyGoal}\r\n//                     inActiveStrokeColor={'#A2A6B9'}\r\n//                     activeStrokeColor='#00C2FF'\r\n//                     title={'Remaining'}\r\n//                     titleColor='black'\r\n//                     progressValueColor='black'\r\n//                 />\r\n//             </View>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default ProgressPage"],"mappings":";;;;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAEzC,OAAOC,gBAAgB,MAAM,0CAA0C;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,IAElEC,YAAY,aAAAC,UAAA;EAAAC,SAAA,CAAAF,YAAA,EAAAC,UAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,YAAA;EAChB,SAAAA,aAAYK,KAAK,EAAE;IAAAC,eAAA,OAAAN,YAAA;IAAA,OAAAG,MAAA,CAAAI,IAAA,OACXF,KAAK;EACb;EAACG,YAAA,CAAAR,YAAA;IAAAS,GAAA;IAAAC,KAAA,EAED,SAAAC,OAAA,EAAS;MACP,IAAAC,WAAA,GAAgC,IAAI,CAACP,KAAK;QAAlCQ,QAAQ,GAAAD,WAAA,CAARC,QAAQ;QAAEC,SAAS,GAAAF,WAAA,CAATE,SAAS;MAC3B,IAAMC,eAAe,GAAIF,QAAQ,GAAGC,SAAS,GAAI,GAAG;MACpD,IAAME,GAAG,GAAGF,SAAS,GAAGD,QAAQ,GAAG,QAAQ;MAE3C,OACEd,IAAA,CAACH,IAAI;QAACqB,KAAK,EAAE;UAAEC,UAAU,EAAE;QAAG,CAAE;QAAAC,QAAA,EAC9BpB,IAAA,CAACF,gBAAgB;UACfa,KAAK,EAAEG,QAAS;UAChBO,MAAM,EAAE,EAAG;UACXC,QAAQ,EAAEP,SAAU;UACpBQ,mBAAmB,EAAE,SAAU;UAC/BC,iBAAiB,EAAE,SAAU;UAC7BC,KAAK,EAAE,UAAW;UAClBC,UAAU,EAAE,OAAQ;UACpBC,kBAAkB,EAAE;QAAQ;MAC5B,EACG;IAEX;EAAC;EAAA,OAAA1B,YAAA;AAAA,EAxBwBL,SAAS;AA2BpC,eAAeK,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}