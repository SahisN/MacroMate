{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Scan() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    hasPermission = _useState2[0],\n    setHasPermission = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    scanned = _useState4[0],\n    setScanned = _useState4[1];\n  useEffect(function () {\n    var getBarCodeScannerPermissions = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var _yield$BarCodeScanner = yield BarCodeScanner.requestPermissionsAsync(),\n          status = _yield$BarCodeScanner.status;\n        setHasPermission(status === 'granted');\n      });\n      return function getBarCodeScannerPermissions() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    getBarCodeScannerPermissions();\n  }, []);\n  var handleBarCodeScanned = function handleBarCodeScanned(_ref2) {\n    var type = _ref2.type,\n      data = _ref2.data;\n    setScanned(true);\n    alert(\"Bar code with type \" + type + \" and data \" + data + \" has been scanned!\");\n  };\n  if (hasPermission === null) {\n    return _jsx(Text, {\n      children: \"Requesting for camera permission\"\n    });\n  }\n  if (hasPermission === false) {\n    return _jsx(Text, {\n      children: \"No access to camera\"\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(BarCodeScanner, {\n      onBarCodeScanned: scanned ? undefined : handleBarCodeScanned,\n      style: StyleSheet.absoluteFillObject\n    }), scanned && _jsx(Button, {\n      title: 'Tap to Scan Again',\n      onPress: function onPress() {\n        return setScanned(false);\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","Text","View","StyleSheet","Button","BarCodeScanner","jsx","_jsx","jsxs","_jsxs","Scan","_useState","_useState2","_slicedToArray","hasPermission","setHasPermission","_useState3","_useState4","scanned","setScanned","getBarCodeScannerPermissions","_ref","_asyncToGenerator","_yield$BarCodeScanner","requestPermissionsAsync","status","apply","arguments","handleBarCodeScanned","_ref2","type","data","alert","children","style","styles","container","onBarCodeScanned","undefined","absoluteFillObject","title","onPress","create","flex","flexDirection","justifyContent"],"sources":["C:/Users/jenli/csula-cs3337swe-202301Group5-repo/Components/Tabs/LogPage_component/Scan.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Text, View, StyleSheet, Button } from 'react-native';\r\nimport { BarCodeScanner } from 'expo-barcode-scanner';\r\n\r\nexport default function Scan() {\r\n  const [hasPermission, setHasPermission] = useState(null);\r\n  const [scanned, setScanned] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getBarCodeScannerPermissions = async () => {\r\n      const { status } = await BarCodeScanner.requestPermissionsAsync();\r\n      setHasPermission(status === 'granted');\r\n    };\r\n\r\n    getBarCodeScannerPermissions();\r\n  }, []);\r\n\r\n  const handleBarCodeScanned = ({ type, data }) => {\r\n    setScanned(true);\r\n    alert(`Bar code with type ${type} and data ${data} has been scanned!`);\r\n  };\r\n\r\n  if (hasPermission === null) {\r\n    return <Text>Requesting for camera permission</Text>;\r\n  }\r\n  if (hasPermission === false) {\r\n    return <Text>No access to camera</Text>;\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <BarCodeScanner\r\n        onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\r\n        style={StyleSheet.absoluteFillObject}\r\n      />\r\n      {scanned && <Button title={'Tap to Scan Again'} onPress={() => setScanned(false)} />}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,MAAA;AAEnD,SAASC,cAAc,QAAQ,sBAAsB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEtD,eAAe,SAASC,IAAIA,CAAA,EAAG;EAC7B,IAAAC,SAAA,GAA0CZ,QAAQ,CAAC,IAAI,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAjDG,aAAa,GAAAF,UAAA;IAAEG,gBAAgB,GAAAH,UAAA;EACtC,IAAAI,UAAA,GAA8BjB,QAAQ,CAAC,KAAK,CAAC;IAAAkB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAtCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAE1BjB,SAAS,CAAC,YAAM;IACd,IAAMoB,4BAA4B;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;QAC/C,IAAAC,qBAAA,SAAyBlB,cAAc,CAACmB,uBAAuB,EAAE;UAAzDC,MAAM,GAAAF,qBAAA,CAANE,MAAM;QACdV,gBAAgB,CAACU,MAAM,KAAK,SAAS,CAAC;MACxC,CAAC;MAAA,gBAHKL,4BAA4BA,CAAA;QAAA,OAAAC,IAAA,CAAAK,KAAA,OAAAC,SAAA;MAAA;IAAA,GAGjC;IAEDP,4BAA4B,EAAE;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMQ,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAAC,KAAA,EAAuB;IAAA,IAAjBC,IAAI,GAAAD,KAAA,CAAJC,IAAI;MAAEC,IAAI,GAAAF,KAAA,CAAJE,IAAI;IACxCZ,UAAU,CAAC,IAAI,CAAC;IAChBa,KAAK,yBAAuBF,IAAI,kBAAaC,IAAI,wBAAqB;EACxE,CAAC;EAED,IAAIjB,aAAa,KAAK,IAAI,EAAE;IAC1B,OAAOP,IAAA,CAACN,IAAI;MAAAgC,QAAA,EAAC;IAAgC,EAAO;EACtD;EACA,IAAInB,aAAa,KAAK,KAAK,EAAE;IAC3B,OAAOP,IAAA,CAACN,IAAI;MAAAgC,QAAA,EAAC;IAAmB,EAAO;EACzC;EAEA,OACExB,KAAA,CAACP,IAAI;IAACgC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAH,QAAA,GAC5B1B,IAAA,CAACF,cAAc;MACbgC,gBAAgB,EAAEnB,OAAO,GAAGoB,SAAS,GAAGV,oBAAqB;MAC7DM,KAAK,EAAE/B,UAAU,CAACoC;IAAmB,EACrC,EACDrB,OAAO,IAAIX,IAAA,CAACH,MAAM;MAACoC,KAAK,EAAE,mBAAoB;MAACC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMtB,UAAU,CAAC,KAAK,CAAC;MAAA;IAAC,EAAG;EAAA,EAC/E;AAEX;AAEA,IAAMgB,MAAM,GAAGhC,UAAU,CAACuC,MAAM,CAAC;EAC/BN,SAAS,EAAE;IACTO,IAAI,EAAE,CAAC;IACPC,aAAa,EAAE,QAAQ;IACvBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}