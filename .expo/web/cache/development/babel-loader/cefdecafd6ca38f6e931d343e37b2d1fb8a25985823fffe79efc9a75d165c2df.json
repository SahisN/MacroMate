{"ast":null,"code":"import React, { Component, useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport LogList from \"./LogPage_component/LogList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport AddFood from \"./AddFood\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar BreakFast = [{\n  key: 'item1',\n  value: 'Eggs'\n}, {\n  key: 'item2',\n  value: 'Orange Juice'\n}];\nvar Lunch = [{\n  key: 'item1',\n  value: 'Rice'\n}, {\n  key: 'item2',\n  value: 'Chicken'\n}];\nvar Dinner = [{\n  key: 'item1',\n  value: 'Steak'\n}, {\n  key: 'item2',\n  value: 'mash potato'\n}];\nvar Snacks = [{\n  key: 'item1',\n  value: 'Peas'\n}, {\n  key: 'item2',\n  value: 'Carrots'\n}];\nfunction LogPage(_ref) {\n  var navigation = _ref.navigation;\n  return _jsx(ScrollView, {\n    contentContainerStyle: {\n      padding: 10\n    },\n    children: _jsxs(View, {\n      style: {\n        flex: 1\n      },\n      children: [_jsx(Text, {\n        style: [styles.Text],\n        children: \"BreakFast\"\n      }), _jsx(LogList, {\n        data: BreakFast\n      }), _jsx(View, {\n        style: styles.button,\n        children: _jsx(Button, {\n          title: 'Add Food',\n          onPress: function onPress() {\n            return navigation.navigate('AddFood');\n          }\n        })\n      }), _jsx(Text, {\n        style: [styles.Text, {\n          marginTop: 20\n        }],\n        children: \"Lunch\"\n      }), _jsx(LogList, {\n        data: Lunch\n      }), _jsx(View, {\n        style: styles.button,\n        children: _jsx(Button, {\n          title: 'Add Food',\n          onPress: function onPress() {\n            return navigation.navigate('AddFood');\n          },\n          titleStyle: {\n            fontSize: 50\n          }\n        })\n      }), _jsx(Text, {\n        style: [styles.Text, {\n          marginTop: 20\n        }],\n        children: \"Dinner\"\n      }), _jsx(LogList, {\n        data: Dinner\n      }), _jsx(View, {\n        style: styles.button,\n        children: _jsx(Button, {\n          title: 'Add Food',\n          onPress: function onPress() {\n            return navigation.navigate('AddFood');\n          },\n          titleStyle: {\n            fontSize: 50\n          }\n        })\n      }), _jsx(Text, {\n        style: [styles.Text, {\n          marginTop: 20\n        }],\n        children: \"Snacks\"\n      }), _jsx(LogList, {\n        data: Snacks\n      }), _jsx(View, {\n        style: styles.button,\n        children: _jsx(Button, {\n          title: 'Add Food',\n          onPress: function onPress() {\n            return navigation.navigate('AddFood');\n          },\n          titleStyle: {\n            fontSize: 50\n          }\n        })\n      })]\n    })\n  });\n}\nvar Stack = createNativeStackNavigator();\nfunction StackNav() {\n  return _jsx(NavigationContainer, {\n    independent: true,\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"LogPage\",\n      children: [_jsx(Stack.Screen, {\n        name: \"LogPage\",\n        component: LogPage,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"AddFood\",\n        component: AddFood\n      }), _jsx(Stack.Screen, {\n        name: \"FoodInput\",\n        component: FoodDetails,\n        options: {\n          title: 'FoodInput'\n        }\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  Text: {\n    fontWeight: 'bold',\n    fontSize: 30,\n    backgroundColor: 'white',\n    padding: 10\n  },\n  Link: {\n    fontWeight: 'bold',\n    fontSize: 30,\n    color: 'blue',\n    marginLeft: 10,\n    marginTop: 1,\n    backgroundColor: 'white'\n  },\n  button: {\n    alignItems: 'flex-start',\n    backgroundColor: 'white',\n    marginTop: 2\n  },\n  AddFoodManually: {\n    justifyContent: 'center',\n    paddingTop: 20,\n    marginBottom: 40,\n    fontWeight: 'bold',\n    fontSize: 20,\n    backgroundColor: 'white',\n    borderRadius: 50,\n    width: '7%',\n    height: '10%',\n    alignContent: 'center'\n  },\n  buttonText: {\n    fontSize: 33,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  }\n});\nexport default StackNav;","map":{"version":3,"names":["React","Component","useState","useEffect","Text","View","StyleSheet","Button","TouchableOpacity","NavigationContainer","createNativeStackNavigator","LogList","ScrollView","AddFood","jsx","_jsx","jsxs","_jsxs","BreakFast","key","value","Lunch","Dinner","Snacks","LogPage","_ref","navigation","contentContainerStyle","padding","children","style","flex","styles","data","button","title","onPress","navigate","marginTop","titleStyle","fontSize","Stack","StackNav","independent","Navigator","initialRouteName","Screen","name","component","options","headerShown","FoodDetails","create","fontWeight","backgroundColor","Link","color","marginLeft","alignItems","AddFoodManually","justifyContent","paddingTop","marginBottom","borderRadius","width","height","alignContent","buttonText","textAlign"],"sources":["C:/Users/jenli/csula-cs3337swe-202301Group5-repo/Components/Tabs/LogPage.js"],"sourcesContent":["\r\nimport React, { Component, useState, useEffect } from 'react';\r\nimport { Text, View, StyleSheet, Button, TouchableOpacity } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport LogList from './LogPage_component/LogList';\r\nimport { ScrollView } from 'react-native';\r\n\r\n//screens\r\nimport AddFood from './AddFood';\r\n\r\n\r\nconst BreakFast = [\r\n    { key: 'item1', value: 'Eggs' },\r\n    { key: 'item2', value: 'Orange Juice' },\r\n];\r\n\r\nconst Lunch = [\r\n    { key: 'item1', value: 'Rice' },\r\n    { key: 'item2', value: 'Chicken' },\r\n];\r\n\r\nconst Dinner = [\r\n    { key: 'item1', value: 'Steak' },\r\n    { key: 'item2', value: 'mash potato' },\r\n];\r\n\r\nconst Snacks = [\r\n    { key: 'item1', value: 'Peas' },\r\n    { key: 'item2', value: 'Carrots' },\r\n];\r\n\r\n\r\n\r\nfunction LogPage({ navigation }) {\r\n    return (\r\n        <ScrollView contentContainerStyle={{ padding: 10 }}>\r\n            <View style={{ flex: 1 }}>\r\n\r\n\r\n                <Text style={[styles.Text]}>BreakFast</Text>\r\n                <LogList data={BreakFast} />\r\n                <View style={styles.button}><Button title={'Add Food'} onPress={() => navigation.navigate('AddFood')} /></View>\r\n\r\n                <Text style={[styles.Text, { marginTop: 20 }]}>Lunch</Text>\r\n                <LogList data={Lunch} />\r\n                <View style={styles.button}><Button title={'Add Food'} onPress={() => navigation.navigate('AddFood')} titleStyle={{ fontSize: 50 }} /></View>\r\n\r\n                <Text style={[styles.Text, { marginTop: 20 }]}>Dinner</Text>\r\n                <LogList data={Dinner} />\r\n                <View style={styles.button}><Button title={'Add Food'} onPress={() => navigation.navigate('AddFood')} titleStyle={{ fontSize: 50 }} /></View>\r\n\r\n                <Text style={[styles.Text, { marginTop: 20 }]}>Snacks</Text>\r\n                <LogList data={Snacks} />\r\n                <View style={styles.button}><Button title={'Add Food'} onPress={() => navigation.navigate('AddFood')} titleStyle={{ fontSize: 50 }} /></View>\r\n\r\n                {/* <Text style={[styles.AddFoodManually, { marginTop: 20 }]}>Add Food Manually</Text> */}\r\n                {/*\r\n                <TouchableOpacity style={styles.AddFoodManually}>\r\n                    <Text style={styles.buttonText}>Add</Text>\r\n                </TouchableOpacity>\r\n                */}\r\n\r\n\r\n\r\n            </View>\r\n        </ScrollView>\r\n\r\n    );\r\n}\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nfunction StackNav() {\r\n    return (\r\n\r\n        <NavigationContainer independent={true}>\r\n            <Stack.Navigator initialRouteName='LogPage' >\r\n                <Stack.Screen name='LogPage' component={LogPage} options={{ headerShown: false }} />\r\n                <Stack.Screen name='AddFood' component={AddFood} />\r\n                <Stack.Screen name=\"FoodInput\" component={FoodDetails} options={{ title: 'FoodInput' }} />\r\n                {/* <Stack.Screen name='ManualLogToDB' component={ManualLogToDB}/> */}\r\n            </Stack.Navigator>\r\n        </NavigationContainer>\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    Text:\r\n    {\r\n        fontWeight: 'bold',\r\n        fontSize: 30,\r\n        backgroundColor: 'white',\r\n        padding: 10\r\n    },\r\n\r\n    Link:\r\n    {\r\n        fontWeight: 'bold',\r\n        fontSize: 30,\r\n        color: 'blue',\r\n        marginLeft: 10,\r\n        marginTop: 1,\r\n        backgroundColor: 'white'\r\n    },\r\n\r\n    button:\r\n    {\r\n        alignItems: 'flex-start',\r\n        backgroundColor: 'white',\r\n        marginTop: 2,\r\n    },\r\n\r\n    // add addFood manully styling - start\r\n    AddFoodManually: {\r\n        justifyContent:'center',\r\n        paddingTop:20,\r\n        marginBottom:40,\r\n        fontWeight: 'bold',\r\n        fontSize: 20,\r\n        backgroundColor: 'white',\r\n        borderRadius: 50,\r\n        width:'7%',\r\n        height:'10%',\r\n        alignContent:'center',\r\n    },\r\n    buttonText: {\r\n        fontSize: 33,\r\n        fontWeight: 'bold',\r\n        textAlign:'center',\r\n    }\r\n    // add addFood manully styling - end\r\n\r\n\r\n});\r\n\r\nexport default StackNav;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}