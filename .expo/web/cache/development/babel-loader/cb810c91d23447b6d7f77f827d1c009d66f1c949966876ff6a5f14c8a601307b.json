{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport React, { useState } from 'react';\nimport { firebase } from \"../../../AppConfiguration/config\";\nimport { Picker } from '@react-native-picker/picker';\nimport { useEffect } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function BarcodeEntry(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    foodName = _useState2[0],\n    setFoodName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    calories = _useState4[0],\n    setCalories = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    serving = _useState6[0],\n    setServing = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    protein = _useState8[0],\n    setProtein = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    fats = _useState10[0],\n    setFats = _useState10[1];\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    carbs = _useState12[0],\n    setCarbs = _useState12[1];\n  var _useState13 = useState(\"breakfast\"),\n    _useState14 = _slicedToArray(_useState13, 2),\n    selectedMeal = _useState14[0],\n    setSelectedMeal = _useState14[1];\n  var _useState15 = useState(0),\n    _useState16 = _slicedToArray(_useState15, 2),\n    selectedMealId = _useState16[0],\n    setSelectedMealId = _useState16[1];\n  var _useState17 = useState(''),\n    _useState18 = _slicedToArray(_useState17, 2),\n    staticCalories = _useState18[0],\n    setStaticCalories = _useState18[1];\n  var _useState19 = useState(''),\n    _useState20 = _slicedToArray(_useState19, 2),\n    staticCarbs = _useState20[0],\n    setStaticCarbs = _useState20[1];\n  var _useState21 = useState(''),\n    _useState22 = _slicedToArray(_useState21, 2),\n    staticFats = _useState22[0],\n    setStaticFats = _useState22[1];\n  var _useState23 = useState(''),\n    _useState24 = _slicedToArray(_useState23, 2),\n    staticProtein = _useState24[0],\n    setStaticProtein = _useState24[1];\n  var updateCalories = function updateCalories() {\n    setStaticCalories(parseInt(calories));\n  };\n  var updateCarbs = function updateCarbs() {\n    setStaticCarbs(parseInt(carbs));\n  };\n  var updateFats = function updateFats() {\n    setStaticFats(parseInt(fats));\n  };\n  var updateProtein = function updateProtein() {\n    setStaticProtein(parseInt(protein));\n  };\n  var setDropDownValues = function setDropDownValues(mealName, mealId) {\n    setSelectedMeal(mealName);\n    setSelectedMealId(mealId);\n  };\n  var getNumericValue = function getNumericValue(text) {\n    var numericValue = text.replace(/[^0-9.]/g, '');\n    return numericValue;\n  };\n  var setValues = function setValues(foodData) {\n    setFoodName(foodData[0]);\n    setCalories(foodData[1]);\n    setCarbs(foodData[2]);\n    setFats(foodData[3]);\n    setProtein(foodData[4]);\n    setStaticCalories(foodData[1]);\n    setStaticCarbs(foodData[2]);\n    setStaticFats(foodData[3]);\n    setStaticProtein(foodData[4]);\n    Alert.alert('Input meal name', 'meal name is set to breakfast by default');\n  };\n  useEffect(function () {\n    if (route.params) {\n      setValues(route.params);\n    }\n  }, []);\n  var updateValue = function updateValue(text) {\n    setServing(getNumericValue(text));\n    if (text) {\n      var user_serving = parseInt(text);\n      if (calories) {\n        setCalories(staticCalories * user_serving);\n      }\n      if (carbs) {\n        setCarbs(staticCarbs * user_serving);\n      }\n      if (fats) {\n        setFats(staticFats * user_serving);\n      }\n      if (protein) {\n        setProtein(staticProtein * user_serving);\n      }\n    } else {\n      setCalories(staticCalories);\n      setCarbs(staticCarbs);\n      setFats(staticFats);\n      setProtein(staticProtein);\n    }\n  };\n  return _jsxs(ScrollView, {\n    children: [_jsx(View, {\n      style: styles.theme,\n      children: _jsx(TextInput, {\n        style: [styles.input, {\n          borderWidth: 0\n        }],\n        placeholder: \"Food Name...\",\n        onChangeText: function onChangeText(text) {\n          return setFoodName(text);\n        },\n        value: foodName\n      })\n    }), _jsxs(View, {\n      style: [styles.theme, {\n        marginTop: 2,\n        flexDirection: 'row'\n      }],\n      children: [_jsx(View, {\n        style: [styles.labelsView, {\n          flex: 2\n        }],\n        children: _jsx(Text, {\n          style: styles.labelText,\n          children: \"Calories per Serving\"\n        })\n      }), _jsx(View, {\n        children: _jsx(TextInput, {\n          style: [styles.input, {\n            width: 150\n          }],\n          keyboardType: \"numeric\",\n          returnKeyType: \"done\",\n          placeholder: \"calories\",\n          placeholderTextColor: '#aaaaaa',\n          onChangeText: function onChangeText(text) {\n            return setCalories(getNumericValue(text));\n          },\n          onBlur: function onBlur(text) {\n            return updateCalories();\n          },\n          value: '' + calories,\n          multiline: true,\n          underlineColorAndroid: 'transparent',\n          autoCapitalize: \"none\"\n        })\n      }), _jsx(Text, {\n        style: {\n          marginTop: 20,\n          marginRight: 10,\n          fontSize: 20\n        },\n        children: \"cal\"\n      })]\n    }), _jsxs(View, {\n      style: [styles.theme, {\n        marginTop: 2,\n        flexDirection: 'row'\n      }],\n      children: [_jsx(View, {\n        style: [styles.labelsView, {\n          flex: 2\n        }],\n        children: _jsx(Text, {\n          style: styles.labelText,\n          children: \"Serving\"\n        })\n      }), _jsx(View, {\n        children: _jsx(TextInput, {\n          style: [styles.input, {\n            width: 150,\n            marginRight: 35\n          }],\n          keyboardType: \"numeric\",\n          returnKeyType: \"done\",\n          placeholder: \"serving\",\n          placeholderTextColor: '#aaaaaa',\n          onChangeText: function onChangeText(text) {\n            return updateValue(getNumericValue(text));\n          },\n          value: '' + serving,\n          multiline: true,\n          underlineColorAndroid: 'transparent',\n          autoCapitalize: \"none\"\n        })\n      })]\n    }), _jsxs(View, {\n      style: [styles.theme, {\n        marginTop: 2,\n        flexDirection: 'row'\n      }],\n      children: [_jsx(View, {\n        style: [styles.labelsView, {\n          flex: 2\n        }],\n        children: _jsx(Text, {\n          style: styles.labelText,\n          children: \"Carbohydrates\"\n        })\n      }), _jsx(View, {\n        children: _jsx(TextInput, {\n          style: [styles.input, {\n            width: 150\n          }],\n          keyboardType: \"numeric\",\n          returnKeyType: \"done\",\n          placeholder: \"carbs\",\n          placeholderTextColor: '#aaaaaa',\n          onChangeText: function onChangeText(text) {\n            return setCarbs(getNumericValue(text));\n          },\n          onBlur: function onBlur(text) {\n            return updateCarbs();\n          },\n          value: '' + carbs,\n          multiline: true,\n          underlineColorAndroid: 'transparent',\n          autoCapitalize: \"none\"\n        })\n      }), _jsx(Text, {\n        style: {\n          marginTop: 20,\n          marginRight: 10,\n          fontSize: 20\n        },\n        children: \"g\"\n      })]\n    }), _jsxs(View, {\n      style: [styles.theme, {\n        marginTop: 2,\n        flexDirection: 'row'\n      }],\n      children: [_jsx(View, {\n        style: [styles.labelsView, {\n          flex: 2\n        }],\n        children: _jsx(Text, {\n          style: styles.labelText,\n          children: \"Fats\"\n        })\n      }), _jsx(View, {\n        children: _jsx(TextInput, {\n          style: [styles.input, {\n            width: 150\n          }],\n          keyboardType: \"numeric\",\n          returnKeyType: \"done\",\n          placeholder: \"fats\",\n          placeholderTextColor: '#aaaaaa',\n          onChangeText: function onChangeText(text) {\n            return setFats(getNumericValue(text));\n          },\n          onBlur: function onBlur(text) {\n            return updateFats();\n          },\n          value: '' + fats,\n          multiline: true,\n          underlineColorAndroid: 'transparent',\n          autoCapitalize: \"none\"\n        })\n      }), _jsx(Text, {\n        style: {\n          marginTop: 20,\n          marginRight: 10,\n          fontSize: 20\n        },\n        children: \"g\"\n      })]\n    }), _jsxs(View, {\n      style: [styles.theme, {\n        marginTop: 2,\n        flexDirection: 'row'\n      }],\n      children: [_jsx(View, {\n        style: [styles.labelsView, {\n          flex: 2\n        }],\n        children: _jsx(Text, {\n          style: styles.labelText,\n          children: \"Protien\"\n        })\n      }), _jsx(View, {\n        children: _jsx(TextInput, {\n          style: [styles.input, {\n            width: 150\n          }],\n          keyboardType: \"numeric\",\n          returnKeyType: \"done\",\n          placeholder: \"protein\",\n          placeholderTextColor: '#aaaaaa',\n          onChangeText: function onChangeText(text) {\n            return setProtein(getNumericValue(text));\n          },\n          onBlur: function onBlur(text) {\n            return updateProtein();\n          },\n          value: '' + protein,\n          multiline: true,\n          underlineColorAndroid: 'transparent',\n          autoCapitalize: \"none\"\n        })\n      }), _jsx(Text, {\n        style: {\n          marginTop: 20,\n          marginRight: 10,\n          fontSize: 20\n        },\n        children: \"g\"\n      })]\n    }), _jsxs(View, {\n      style: [styles.theme, {\n        marginTop: 2\n      }],\n      children: [_jsx(Text, {\n        style: [styles.labelText, {\n          textAlign: 'center',\n          marginTop: 10\n        }],\n        children: \"Meal Name\"\n      }), _jsxs(Picker, {\n        selectedValue: selectedMeal,\n        onValueChange: function onValueChange(itemValue, itemIndex) {\n          return setDropDownValues(itemValue, itemIndex);\n        },\n        children: [_jsx(Picker.Item, {\n          label: \"Breakfast\",\n          value: \"breakfast\"\n        }), _jsx(Picker.Item, {\n          label: \"Lunch\",\n          value: \"lunch\"\n        }), _jsx(Picker.Item, {\n          label: \"Dinner\",\n          value: \"dinner\"\n        }), _jsx(Picker.Item, {\n          label: \"Snack\",\n          value: \"snack\"\n        })]\n      })]\n    }), _jsx(View, {\n      style: styles.buttonContainer,\n      children: _jsx(TouchableOpacity, {\n        style: styles.button,\n        children: _jsx(Text, {\n          style: styles.buttonLabel,\n          children: \"Add Food\"\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  header: {\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 5,\n    padding: 10,\n    fontSize: 18,\n    margin: 15\n  },\n  labelsView: {\n    padding: 10,\n    margin: 15,\n    fontSize: 20\n  },\n  labelText: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  theme: {\n    backgroundColor: 'white'\n  },\n  button: {\n    backgroundColor: 'green',\n    height: 40,\n    width: 400,\n    borderRadius: 5\n  },\n  buttonLabel: {\n    textAlign: 'center',\n    marginTop: 5,\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 20\n  },\n  buttonContainer: {\n    flex: 2,\n    alignItems: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","firebase","Picker","useEffect","jsx","_jsx","jsxs","_jsxs","BarcodeEntry","_ref","route","navigation","_useState","_useState2","_slicedToArray","foodName","setFoodName","_useState3","_useState4","calories","setCalories","_useState5","_useState6","serving","setServing","_useState7","_useState8","protein","setProtein","_useState9","_useState10","fats","setFats","_useState11","_useState12","carbs","setCarbs","_useState13","_useState14","selectedMeal","setSelectedMeal","_useState15","_useState16","selectedMealId","setSelectedMealId","_useState17","_useState18","staticCalories","setStaticCalories","_useState19","_useState20","staticCarbs","setStaticCarbs","_useState21","_useState22","staticFats","setStaticFats","_useState23","_useState24","staticProtein","setStaticProtein","updateCalories","parseInt","updateCarbs","updateFats","updateProtein","setDropDownValues","mealName","mealId","getNumericValue","text","numericValue","replace","setValues","foodData","Alert","alert","params","updateValue","user_serving","ScrollView","children","View","style","styles","theme","TextInput","input","borderWidth","placeholder","onChangeText","value","marginTop","flexDirection","labelsView","flex","Text","labelText","width","keyboardType","returnKeyType","placeholderTextColor","onBlur","multiline","underlineColorAndroid","autoCapitalize","marginRight","fontSize","textAlign","selectedValue","onValueChange","itemValue","itemIndex","Item","label","buttonContainer","TouchableOpacity","button","buttonLabel","StyleSheet","create","header","fontWeight","borderColor","borderRadius","padding","margin","backgroundColor","height","color","alignItems"],"sources":["C:/Users/jenli/csula-cs3337swe-202301Group5-repo/Components/Tabs/LogPage_component/BarcodeEntry.js"],"sourcesContent":["import { SafeAreaView, Text, StyleSheet, TextInput, TouchableOpacity, Keyboard, View, ScrollView, Alert} from 'react-native';\r\nimport React, { useState } from 'react';\r\nimport { firebase } from '../../../AppConfiguration/config';\r\nimport { Picker } from '@react-native-picker/picker';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nexport default function BarcodeEntry({route, navigation})\r\n{\r\n    \r\n    // modifyable data -> these data will be changed by serving size\r\n    const [foodName, setFoodName] = useState('');\r\n    const [calories, setCalories] = useState('');\r\n    const [serving, setServing] = useState('');\r\n    const [protein, setProtein] = useState('');\r\n    const [fats, setFats] = useState('');\r\n    const [carbs, setCarbs] = useState('');\r\n    const [selectedMeal, setSelectedMeal] = useState(\"breakfast\");\r\n    const [selectedMealId, setSelectedMealId] = useState(0);\r\n\r\n    // static data -> these data won't be changed by serving size\r\n    const [staticCalories, setStaticCalories] = useState('');\r\n    const [staticCarbs, setStaticCarbs] = useState('');\r\n    const [staticFats, setStaticFats] = useState('');\r\n    const [staticProtein, setStaticProtein] = useState('');\r\n    \r\n    \r\n    \r\n    // macroNutrients update functions\r\n    const updateCalories = () => {\r\n        setStaticCalories(parseInt(calories));\r\n    }\r\n\r\n    const updateCarbs = () => {\r\n        setStaticCarbs(parseInt(carbs));\r\n    }\r\n\r\n    const updateFats = () => {\r\n        setStaticFats(parseInt(fats));\r\n    }\r\n\r\n    const updateProtein = () => {\r\n        setStaticProtein(parseInt(protein));\r\n    }\r\n\r\n    const setDropDownValues = (mealName, mealId) => {\r\n        setSelectedMeal(mealName);\r\n        setSelectedMealId(mealId);\r\n    }\r\n\r\n    const getNumericValue = (text) => {\r\n        const numericValue = text.replace(/[^0-9.]/g, '');\r\n        return numericValue;\r\n    }\r\n\r\n    const setValues = (foodData) => {\r\n        setFoodName(foodData[0]);\r\n        setCalories(foodData[1]);\r\n        setCarbs(foodData[2]); // carbs\r\n        setFats(foodData[3]); // fats\r\n        setProtein(foodData[4]); // protien\r\n\r\n        \r\n        setStaticCalories(foodData[1]); //cal\r\n        setStaticCarbs(foodData[2]); // carbs\r\n        setStaticFats(foodData[3]); // fats\r\n        setStaticProtein(foodData[4]); // protien\r\n\r\n        Alert.alert('Input meal name', 'meal name is set to breakfast by default')\r\n    }\r\n\r\n   // const myProp = route.params ? setValues(route.params) : false;\r\n\r\n    useEffect(() =>{\r\n        if(route.params){\r\n            setValues(route.params)\r\n        }\r\n    },[]);\r\n\r\n    const updateValue = (text) => {\r\n\r\n        setServing(getNumericValue(text));\r\n        \r\n        // check if serving is empty \r\n        if(text)\r\n        {\r\n            var user_serving = parseInt(text);\r\n\r\n           /** Following if statements checks if the fields are empty or not */\r\n\r\n           if(calories) {\r\n            setCalories(staticCalories * user_serving);\r\n           }\r\n\r\n           \r\n           if(carbs) {\r\n            // if carbs is not empty, multiply carbs by serving & update\r\n            setCarbs(staticCarbs * user_serving);\r\n           }\r\n\r\n          \r\n           if(fats) {\r\n            // if fats is not empty, multiply fats by serving & update\r\n            setFats(staticFats * user_serving);\r\n           }\r\n\r\n           \r\n           if(protein) {\r\n            // if protein is not empty, multiply protein by serving & update\r\n            setProtein(staticProtein * user_serving);\r\n           }\r\n           \r\n        }\r\n\r\n        // if it's empty, display the user set value\r\n        else\r\n        {\r\n            // set fields to default values when serving field is empty\r\n            setCalories(staticCalories);\r\n            setCarbs(staticCarbs);\r\n            setFats(staticFats);\r\n            setProtein(staticProtein);\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n        <ScrollView>\r\n            {/** Food Name Input */}\r\n            <View style={styles.theme}>\r\n                <TextInput\r\n                    style={[styles.input, { borderWidth: 0, }]}\r\n                    placeholder='Food Name...'\r\n                    onChangeText={(text) => setFoodName(text)}\r\n                    value={foodName}\r\n                />\r\n            </View>\r\n\r\n            {/** Calories per serving input and label */}\r\n            <View style={[styles.theme, { marginTop: 2, flexDirection: 'row' }]}>\r\n\r\n                <View style={[styles.labelsView, { flex: 2 }]}>\r\n                    <Text style={styles.labelText}>Calories per Serving</Text>\r\n                </View>\r\n\r\n                <View>\r\n                    <TextInput\r\n                        style={[styles.input, { width: 150 }]}\r\n                        keyboardType='numeric'\r\n                        returnKeyType='done'\r\n                        placeholder='calories'\r\n                        placeholderTextColor={'#aaaaaa'}\r\n                        onChangeText={(text) => setCalories(getNumericValue(text))}\r\n                        onBlur={(text) => updateCalories()}\r\n                        value={'' + calories}\r\n                        multiline={true}\r\n                        underlineColorAndroid={'transparent'}\r\n                        autoCapitalize='none'\r\n                    />\r\n                </View>\r\n                <Text style={{ marginTop: 20, marginRight: 10, fontSize: 20 }}>cal</Text>\r\n\r\n            </View>\r\n\r\n            {/** Serving input and label */}\r\n            <View style={[styles.theme, { marginTop: 2, flexDirection: 'row' }]}>\r\n\r\n                <View style={[styles.labelsView, { flex: 2 }]}>\r\n                    <Text style={styles.labelText}>Serving</Text>\r\n                </View>\r\n\r\n                <View>\r\n                    <TextInput\r\n\r\n                        style={[styles.input, { width: 150, marginRight: 35}]}\r\n                        keyboardType='numeric'\r\n                        returnKeyType='done'\r\n                        placeholder='serving'\r\n                        placeholderTextColor={'#aaaaaa'}\r\n                        onChangeText={(text) => updateValue(getNumericValue(text))}\r\n                        value={'' + serving}\r\n                        multiline={true}\r\n                        underlineColorAndroid={'transparent'}\r\n                        autoCapitalize='none'\r\n                    />\r\n                </View>\r\n                \r\n            </View>\r\n\r\n            {/** Carbs input and label */}\r\n            <View style={[styles.theme, { marginTop: 2, flexDirection: 'row' }]}>\r\n\r\n                <View style={[styles.labelsView, { flex: 2 }]}>\r\n                    <Text style={styles.labelText}>Carbohydrates</Text>\r\n                </View>\r\n\r\n                <View>\r\n                    <TextInput\r\n                        style={[styles.input, { width: 150 }]}\r\n                        keyboardType='numeric'\r\n                        returnKeyType='done'\r\n                        placeholder='carbs'\r\n                        placeholderTextColor={'#aaaaaa'}\r\n                        onChangeText={(text) => setCarbs(getNumericValue(text))}\r\n                        onBlur={(text) => updateCarbs()}\r\n                        value={'' + carbs}\r\n                        multiline={true}\r\n                        underlineColorAndroid={'transparent'}\r\n                        autoCapitalize='none'\r\n                    />\r\n                </View>\r\n                <Text style={{ marginTop: 20, marginRight: 10, fontSize: 20 }}>g</Text>\r\n\r\n            </View>\r\n\r\n            {/** Fats input and label */}\r\n            <View style={[styles.theme, { marginTop: 2, flexDirection: 'row' }]}>\r\n\r\n                <View style={[styles.labelsView, { flex: 2 }]}>\r\n                    <Text style={styles.labelText}>Fats</Text>\r\n                </View>\r\n\r\n                <View>\r\n                    <TextInput\r\n\r\n                        style={[styles.input, { width: 150 }]}\r\n                        keyboardType='numeric'\r\n                        returnKeyType='done'\r\n                        placeholder='fats'\r\n                        placeholderTextColor={'#aaaaaa'}\r\n                        onChangeText={(text) => setFats(getNumericValue(text))}\r\n                        onBlur={(text) => updateFats()}\r\n                        value={'' + fats}\r\n                        multiline={true}\r\n                        underlineColorAndroid={'transparent'}\r\n                        autoCapitalize='none'\r\n                    />\r\n                </View>\r\n                <Text style={{ marginTop: 20, marginRight: 10, fontSize: 20 }}>g</Text>\r\n\r\n            </View>\r\n\r\n            {/** Protien input and label */}\r\n            <View style={[styles.theme, { marginTop: 2, flexDirection: 'row' }]}>\r\n\r\n                <View style={[styles.labelsView, { flex: 2 }]}>\r\n                    <Text style={styles.labelText}>Protien</Text>\r\n                </View>\r\n\r\n                <View>\r\n                    <TextInput\r\n                        style={[styles.input, { width: 150 }]}\r\n                        keyboardType='numeric'\r\n                        returnKeyType='done'\r\n                        placeholder='protein'\r\n                        placeholderTextColor={'#aaaaaa'}\r\n                        onChangeText={(text) => setProtein(getNumericValue(text))}\r\n                        onBlur={(text) => updateProtein()}\r\n                        value={'' + protein}\r\n                        multiline={true}\r\n                        underlineColorAndroid={'transparent'}\r\n                        autoCapitalize='none'\r\n                    />\r\n                </View>\r\n                <Text style={{ marginTop: 20, marginRight: 10, fontSize: 20 }}>g</Text>\r\n\r\n            </View>\r\n\r\n            {/** Meal name dropdown list and label */}\r\n            <View style={[styles.theme, { marginTop: 2 }]}>\r\n                <Text style={[styles.labelText, { textAlign: 'center', marginTop: 10 }]}>Meal Name</Text>\r\n\r\n                <Picker selectedValue={selectedMeal} onValueChange={(itemValue, itemIndex) => setDropDownValues(itemValue, itemIndex)}>\r\n                    <Picker.Item label='Breakfast' value='breakfast' />\r\n                    <Picker.Item label='Lunch' value='lunch' />\r\n                    <Picker.Item label='Dinner' value='dinner' />\r\n                    <Picker.Item label='Snack' value='snack' />\r\n                </Picker>\r\n\r\n            </View>\r\n\r\n            {/** Add Food Button */}\r\n            <View style={styles.buttonContainer}>\r\n                <TouchableOpacity style={styles.button}>\r\n                    <Text style={styles.buttonLabel}>Add Food</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n\r\n        </ScrollView>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    header: {\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n    },\r\n\r\n    input: {\r\n        borderWidth: 1,\r\n        borderColor: '#ccc',\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        fontSize: 18,\r\n        margin: 15\r\n    },\r\n\r\n    labelsView: {\r\n        padding: 10,\r\n        margin: 15,\r\n        fontSize: 20\r\n    },\r\n\r\n    labelText: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold'\r\n    },\r\n\r\n\r\n    theme: {\r\n        backgroundColor: 'white'\r\n    },\r\n\r\n    button: {\r\n        backgroundColor: 'green',\r\n        height: 40,\r\n        width: 400,\r\n        borderRadius: 5\r\n    },\r\n\r\n    buttonLabel:\r\n    {\r\n        textAlign: 'center',\r\n        marginTop: 5,\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        fontSize: 20\r\n    },\r\n\r\n    buttonContainer: {\r\n        flex: 2,\r\n        alignItems: 'center'\r\n    },\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}