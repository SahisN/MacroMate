{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { LineChart } from 'react-native-chart-kit';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function MyLineChart() {\n  var _useState = useState('daily'),\n    _useState2 = _slicedToArray(_useState, 2),\n    timeFrame = _useState2[0],\n    setTimeFrame = _useState2[1];\n  var renderChart = function renderChart() {\n    switch (timeFrame) {\n      case 'weekly':\n        return {\n          labels: ['Wk 1', 'Wk 2', 'Wk 3', 'Wk 4'],\n          datasets: [{\n            data: [20, 45, 28, 80],\n            strokeWidth: 2\n          }]\n        };\n      case 'monthly':\n        return {\n          labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June'],\n          datasets: [{\n            data: [20, 45, 28, 80, 99, 43],\n            strokeWidth: 2\n          }]\n        };\n      default:\n        return {\n          labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n          datasets: [{\n            data: [20, 25, 18, 38, 32, 30, 50],\n            strokeWidth: 2\n          }]\n        };\n    }\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(Text, {\n      style: [styles.header, {\n        alignSelf: 'center'\n      }],\n      children: \"Goal Chart\"\n    }), _jsxs(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      children: [_jsx(TouchableOpacity, {\n        style: [styles.button, timeFrame === 'daily' && styles.activeButton],\n        onPress: function onPress() {\n          return setTimeFrame('daily');\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"DAILY\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: [styles.button, timeFrame === 'weekly' && styles.activeButton],\n        onPress: function onPress() {\n          return setTimeFrame('weekly');\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"WEEKLY\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: [styles.button, timeFrame === 'monthly' && styles.activeButton],\n        onPress: function onPress() {\n          return setTimeFrame('monthly');\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"MONTHLY\"\n        })\n      })]\n    }), _jsx(LineChart, {\n      data: renderChart(),\n      width: Dimensions.get('window').width - 16,\n      height: 220,\n      chartConfig: {\n        backgroundColor: '#1cc910',\n        backgroundGradientFrom: '#1060c9',\n        backgroundGradientTo: '#efefef',\n        decimalPlaces: 2,\n        color: function color() {\n          var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n          return \"rgba(0, 0, 0, \" + opacity + \")\";\n        },\n        style: {\n          borderRadius: 16,\n          padding: 16\n        }\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  header: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginVertical: 16\n  },\n  button: {\n    backgroundColor: '#efefef',\n    borderRadius: 8,\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    marginVertical: 8,\n    marginHorizontal: 2\n  },\n  activeButton: {\n    backgroundColor: '#1060c9'\n  },\n  buttonText: {\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["LineChart","Text","Dimensions","StyleSheet","TouchableOpacity","View","React","useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","MyLineChart","_useState","_useState2","_slicedToArray","timeFrame","setTimeFrame","renderChart","labels","datasets","data","strokeWidth","children","style","styles","header","alignSelf","flexDirection","button","activeButton","onPress","buttonText","width","get","height","chartConfig","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","opacity","arguments","length","undefined","borderRadius","padding","create","fontSize","fontWeight","marginVertical","paddingVertical","paddingHorizontal","marginHorizontal"],"sources":["C:/Users/jenli/csula-cs3337swe-202301Group5-repo/Components/Tabs/Goal_component/LineChart.js"],"sourcesContent":["import { LineChart } from 'react-native-chart-kit';\r\nimport { Text, Dimensions, StyleSheet, TouchableOpacity, View } from 'react-native';\r\nimport React, { useState } from 'react';\r\n\r\nexport default function MyLineChart() {\r\n  const [timeFrame, setTimeFrame] = useState('daily');\r\n\r\n  const renderChart = () => {\r\n    switch (timeFrame) {\r\n      case 'weekly':\r\n        return {\r\n          labels: ['Wk 1', 'Wk 2', 'Wk 3', 'Wk 4'],\r\n          datasets: [\r\n            {\r\n              data: [20, 45, 28, 80],\r\n              strokeWidth: 2,\r\n            },\r\n          ],\r\n        };\r\n      case 'monthly':\r\n        return {\r\n          labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June'],\r\n          datasets: [\r\n            {\r\n              data: [20, 45, 28, 80, 99, 43],\r\n              strokeWidth: 2,\r\n            },\r\n          ],      \r\n         };\r\n      default:\r\n        // daily\r\n        return {\r\n          labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n          datasets: [\r\n            {\r\n              data: [20, 25, 18, 38, 32, 30, 50],\r\n              strokeWidth: 2,\r\n            },\r\n          ],\r\n        };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Text style={[styles.header, {alignSelf: 'center'}]}>Goal Chart</Text>\r\n      <View style={{flexDirection: 'row'}}>\r\n        <TouchableOpacity\r\n          style={[styles.button, timeFrame === 'daily' && styles.activeButton]}\r\n          onPress={() => setTimeFrame('daily')}>\r\n          <Text style={styles.buttonText}>DAILY</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          style={[styles.button, timeFrame === 'weekly' && styles.activeButton]}\r\n          onPress={() => setTimeFrame('weekly')}>\r\n          <Text style={styles.buttonText}>WEEKLY</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          style={[styles.button, timeFrame === 'monthly' && styles.activeButton]}\r\n          onPress={() => setTimeFrame('monthly')}>\r\n          <Text style={styles.buttonText}>MONTHLY</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <LineChart\r\n        data={renderChart()}\r\n        width={Dimensions.get('window').width - 16}\r\n        height={220}\r\n        chartConfig={{\r\n          backgroundColor: '#1cc910',\r\n          backgroundGradientFrom: '#1060c9',\r\n          backgroundGradientTo: '#efefef',\r\n          decimalPlaces: 2,\r\n          color: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\r\n          style: {\r\n            borderRadius: 16,\r\n            padding: 16,\r\n          }\r\n        }}        \r\n      />\r\n      \r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginVertical: 16,\r\n  },\r\n  button: {\r\n    backgroundColor: '#efefef',\r\n    borderRadius: 8,\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 12,\r\n    marginVertical: 8,\r\n    marginHorizontal: 2,\r\n  },\r\n  activeButton: {\r\n    backgroundColor: '#1060c9',\r\n  },\r\n  buttonText: {\r\n    fontWeight: 'bold',\r\n  },\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}